#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ë–î –∏ —Ç–∞–±–ª–∏—Ü
"""
import sqlite3

def check_database_structure():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ë–î"""
    try:
        db_path = "database/bot (20).db"
        conn = sqlite3.connect(db_path)
        
        print(f"üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ë–î")
        print(f"üìÅ –ë–î: {db_path}")
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü
        cursor = conn.execute("SELECT name FROM sqlite_master WHERE type='table'")
        tables = cursor.fetchall()
        
        print(f"\nüìã –¢–∞–±–ª–∏—Ü—ã –≤ –ë–î:")
        for table in tables:
            table_name = table[0]
            print(f"  ‚Ä¢ {table_name}")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∫–∞–∂–¥–æ–π —Ç–∞–±–ª–∏—Ü—ã
            cursor2 = conn.execute(f"PRAGMA table_info({table_name})")
            columns = cursor2.fetchall()
            print(f"    –ö–æ–ª–æ–Ω–∫–∏:")
            for col in columns:
                print(f"      - {col[1]} ({col[2]})")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π
            cursor3 = conn.execute(f"SELECT COUNT(*) FROM {table_name}")
            count = cursor3.fetchone()[0]
            print(f"    –ó–∞–ø–∏—Å–µ–π: {count}")
            print()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ —Ç–∞–±–ª–∏—Ü—É actions
        if any('actions' in table[0] for table in tables):
            print(f"üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É actions:")
            cursor = conn.execute("SELECT * FROM actions LIMIT 5")
            actions = cursor.fetchall()
            
            if actions:
                print(f"üìù –ü–µ—Ä–≤—ã–µ 5 –∑–∞–ø–∏—Å–µ–π:")
                for i, action in enumerate(actions, 1):
                    print(f"  {i}. {action}")
            else:
                print(f"üìù –ó–∞–ø–∏—Å–µ–π –≤ actions –Ω–µ—Ç")
        else:
            print(f"‚ùå –¢–∞–±–ª–∏—Ü–∞ actions –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        
        conn.close()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    check_database_structure() 