#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ timestamp –≤ scenario_logs
"""

import sqlite3

db_path = "bot (7).db"

print(f"üìÅ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: {db_path}")
print()

try:
    conn = sqlite3.connect(db_path)
    conn.row_factory = sqlite3.Row
    cursor = conn.cursor()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç timestamp
    print("üîç –§–æ—Ä–º–∞—Ç timestamp –≤ scenario_logs:")
    cursor.execute("""
        SELECT timestamp, step, scenario
        FROM scenario_logs
        ORDER BY rowid DESC
        LIMIT 5
    """)
    
    for row in cursor.fetchall():
        print(f"  ‚Ä¢ timestamp: {row['timestamp']} | step: {row['step']}")
    
    print()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç datetime() —Å unixepoch
    print("üîç –¢–µ—Å—Ç datetime(timestamp, 'unixepoch'):")
    cursor.execute("""
        SELECT 
            timestamp,
            datetime(timestamp, 'unixepoch') as dt_unix,
            datetime(timestamp) as dt_direct,
            date(timestamp) as date_direct
        FROM scenario_logs
        ORDER BY rowid DESC
        LIMIT 3
    """)
    
    for row in cursor.fetchall():
        print(f"  ‚Ä¢ timestamp: {row['timestamp']}")
        print(f"    datetime(unixepoch): {row['dt_unix']}")
        print(f"    datetime(direct): {row['dt_direct']}")
        print(f"    date(direct): {row['date_direct']}")
        print()
    
    print()
    print("üéØ –í–´–í–û–î:")
    
    first_ts = cursor.execute("SELECT timestamp FROM scenario_logs LIMIT 1").fetchone()
    if first_ts:
        ts_value = first_ts['timestamp']
        
        if isinstance(ts_value, (int, float)):
            print("  ‚úÖ timestamp —Ö—Ä–∞–Ω–∏—Ç—Å—è –∫–∞–∫ —á–∏—Å–ª–æ (unix timestamp)")
            print("     VIEW –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∏—Å–ø–æ–ª—å–∑—É—é—Ç datetime(timestamp, 'unixepoch')")
        elif isinstance(ts_value, str):
            if 'T' in str(ts_value) or '-' in str(ts_value):
                print("  ‚ö†Ô∏è  timestamp —Ö—Ä–∞–Ω–∏—Ç—Å—è –∫–∞–∫ ISO —Å—Ç—Ä–æ–∫–∞!")
                print("     VIEW –ù–ï–ü–†–ê–í–ò–õ–¨–ù–û –∏—Å–ø–æ–ª—å–∑—É—é—Ç 'unixepoch'")
                print()
                print("  üîß –†–ï–®–ï–ù–ò–ï:")
                print("     –ù—É–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å VIEW, —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å timestamp –Ω–∞–ø—Ä—è–º—É—é:")
                print("     datetime(l.timestamp) –≤–º–µ—Å—Ç–æ datetime(l.timestamp, 'unixepoch')")
            else:
                print(f"  ‚ùì timestamp –≤ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ: {ts_value}")
        else:
            print(f"  ‚ùì timestamp –∏–º–µ–µ—Ç –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ç–∏–ø: {type(ts_value)}")
    
    conn.close()
    
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    import traceback
    traceback.print_exc()

