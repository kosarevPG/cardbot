#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ü—Ä–∏–º–µ—Ä –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞–º–∏
"""

from aiogram import Router, types, F
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from modules.marketplace_manager import MarketplaceManager

router = Router()
marketplace_manager = MarketplaceManager()

@router.message(Command("marketplace_status"))
async def cmd_marketplace_status(message: types.Message):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç—É—Å –≤—Å–µ—Ö –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤"""
    
    status = marketplace_manager.get_status()
    
    text = "üìä **–°—Ç–∞—Ç—É—Å –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤:**\n\n"
    
    # Ozon
    ozon_status = status['ozon']
    if ozon_status['configured']:
        text += "üü¢ **Ozon**: –ù–∞—Å—Ç—Ä–æ–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ\n"
        text += f"   ‚Ä¢ API –∫–ª—é—á: {'‚úÖ' if ozon_status['api_key'] else '‚ùå'}\n"
        text += f"   ‚Ä¢ Client ID: {'‚úÖ' if ozon_status['client_id'] else '‚ùå'}\n"
    else:
        text += "üî¥ **Ozon**: –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω\n"
    
    # Wildberries
    wb_status = status['wildberries']
    if wb_status['configured']:
        text += "üü¢ **Wildberries**: –ù–∞—Å—Ç—Ä–æ–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ\n"
        text += f"   ‚Ä¢ API –∫–ª—é—á: {'‚úÖ' if wb_status['api_key'] else '‚ùå'}\n"
    else:
        text += "üî¥ **Wildberries**: –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω\n"
    
    # Google Sheets
    text += "üü¢ **Google Sheets**: –î–æ—Å—Ç—É–ø–µ–Ω\n"
    
    await message.answer(text, parse_mode="Markdown")

@router.message(Command("test_connections"))
async def cmd_test_connections(message: types.Message):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫–æ –≤—Å–µ–º API"""
    
    await message.answer("üîó –¢–µ—Å—Ç–∏—Ä—É—é –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è...")
    
    try:
        connections = await marketplace_manager.test_connections()
        
        text = "üîó **–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:**\n\n"
        
        for platform, result in connections.items():
            if result is True:
                text += f"‚úÖ **{platform.title()}**: –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ\n"
            elif isinstance(result, str) and result.startswith("API –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"):
                text += f"‚ö†Ô∏è **{platform.title()}**: {result}\n"
            else:
                text += f"‚ùå **{platform.title()}**: {result}\n"
        
        await message.answer(text, parse_mode="Markdown")
        
    except Exception as e:
        await message.answer(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {str(e)}")

@router.message(Command("sync_ozon"))
async def cmd_sync_ozon(message: types.Message):
    """–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ Ozon"""
    
    await message.answer("üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É—é –¥–∞–Ω–Ω—ã–µ Ozon...")
    
    try:
        result = await marketplace_manager.sync_ozon_data()
        
        if result['success']:
            text = f"‚úÖ **Ozon —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω!**\n\n"
            text += f"üìä {result['message']}\n"
            text += f"üì¶ –¢–æ–≤–∞—Ä–æ–≤: {len(result['data'])}"
            
            await message.answer(text, parse_mode="Markdown")
        else:
            await message.answer(f"‚ùå **–û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ Ozon:**\n{result['error']}", parse_mode="Markdown")
            
    except Exception as e:
        await message.answer(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")

@router.message(Command("sync_wb"))
async def cmd_sync_wb(message: types.Message):
    """–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ Wildberries"""
    
    await message.answer("üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É—é –¥–∞–Ω–Ω—ã–µ Wildberries...")
    
    try:
        result = await marketplace_manager.sync_wb_data()
        
        if result['success']:
            text = f"‚úÖ **Wildberries —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω!**\n\n"
            text += f"üìä {result['message']}\n"
            text += f"üì¶ –¢–æ–≤–∞—Ä–æ–≤: {len(result['data'])}"
            
            await message.answer(text, parse_mode="Markdown")
        else:
            await message.answer(f"‚ùå **–û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ Wildberries:**\n{result['error']}", parse_mode="Markdown")
            
    except Exception as e:
        await message.answer(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")

@router.message(Command("sync_all"))
async def cmd_sync_all(message: types.Message):
    """–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ—Ç –≤—Å–µ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å—ã"""
    
    await message.answer("üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É—é –≤—Å–µ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å—ã...")
    
    try:
        results = await marketplace_manager.sync_all_marketplaces()
        
        text = "üîÑ **–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏:**\n\n"
        
        for platform, result in results.items():
            if result['success']:
                text += f"‚úÖ **{platform.title()}**: {result['message']}\n"
            else:
                text += f"‚ùå **{platform.title()}**: {result['error']}\n"
        
        await message.answer(text, parse_mode="Markdown")
        
    except Exception as e:
        await message.answer(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")

@router.message(Command("marketplace_help"))
async def cmd_marketplace_help(message: types.Message):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø—Ä–∞–≤–∫—É –ø–æ –∫–æ–º–∞–Ω–¥–∞–º –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤"""
    
    help_text = """
üìö **–°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤:**

üîÑ **–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è:**
‚Ä¢ `/sync_ozon` - –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å Ozon
‚Ä¢ `/sync_wb` - –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å Wildberries  
‚Ä¢ `/sync_all` - –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å—ã

üìä **–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:**
‚Ä¢ `/marketplace_status` - –°—Ç–∞—Ç—É—Å –≤—Å–µ—Ö API
‚Ä¢ `/test_connections` - –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π

‚ùì **–ü–æ–º–æ—â—å:**
‚Ä¢ `/marketplace_help` - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞

üí° **–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ:** –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤ Google —Ç–∞–±–ª–∏—Ü–∞—Ö
    """
    
    await message.answer(help_text, parse_mode="Markdown")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤
@router.message(Command("marketplace_admin"))
async def cmd_marketplace_admin(message: types.Message):
    """–ê–¥–º–∏–Ω—Å–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤"""
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–æ–º
    # –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤–∞—à–∞ –ª–æ–≥–∏–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–¥–º–∏–Ω–∞
    
    admin_text = """
üîß **–ê–¥–º–∏–Ω—Å–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤:**

üìä **–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥:**
‚Ä¢ `/marketplace_logs` - –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
‚Ä¢ `/marketplace_errors` - –û—à–∏–±–∫–∏ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞

‚öôÔ∏è **–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:**
‚Ä¢ `/marketplace_force_sync` - –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è
‚Ä¢ `/marketplace_clear_cache` - –û—á–∏—Å—Ç–∏—Ç—å –∫–µ—à

üìà **–ê–Ω–∞–ª–∏—Ç–∏–∫–∞:**
‚Ä¢ `/marketplace_stats` - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–π
‚Ä¢ `/marketplace_performance` - –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å API
    """
    
    await message.answer(admin_text, parse_mode="Markdown")

# –ü—Ä–∏–º–µ—Ä –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
@router.message(Command("marketplace_stats"))
async def cmd_marketplace_stats(message: types.Message):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–π"""
    
    # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏–∑ –ë–î
    stats_text = """
üìà **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤:**

üïê **–ü–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞:**
‚Ä¢ Ozon: 3 —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏, 2 —É—Å–ø–µ—à–Ω—ã—Ö
‚Ä¢ Wildberries: 2 —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏, 2 —É—Å–ø–µ—à–Ω—ã—Ö

üìä **–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:**
‚Ä¢ –í—Å–µ–≥–æ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–π: 156
‚Ä¢ –£—Å–ø–µ—à–Ω—ã—Ö: 148 (94.9%)
‚Ä¢ –û—à–∏–±–æ–∫: 8 (5.1%)

‚è±Ô∏è **–°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è:**
‚Ä¢ Ozon: 2.3 —Å–µ–∫
‚Ä¢ Wildberries: 1.8 —Å–µ–∫
    """
    
    await message.answer(stats_text, parse_mode="Markdown")
