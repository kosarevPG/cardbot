#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ HTML-—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤ modules/learn_cards.py
"""

def check_learn_cards_functions():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ —á–µ–∫-–ª–∏—Å—Ç–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ parse_mode='HTML'"""
    
    print("üîç –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—É–Ω–∫—Ü–∏–π learn_cards.py...")
    
    # –°–ø–∏—Å–æ–∫ —Ñ—É–Ω–∫—Ü–∏–π –∏–∑ —á–µ–∫-–ª–∏—Å—Ç–∞
    functions_to_check = [
        "show_entry_poll_q1",
        "handle_entry_poll_q1", 
        "handle_entry_poll_q2",
        "handle_entry_poll_q3",
        "handle_entry_poll_q4",
        "show_exit_poll_q1",
        "handle_exit_poll_q1",
        "handle_exit_poll_q2", 
        "handle_exit_poll_q3",
        "handle_intro_yes",
        "handle_theory_1",
        "handle_theory_2",
        "handle_theory_3",
        "handle_theory_4",
        "handle_steps",
        "handle_trainer_intro",
        "handle_trainer_examples",
        "handle_show_templates",
        "handle_trainer_input",
        "handle_user_request_input"
    ]
    
    try:
        with open('modules/learn_cards.py', 'r', encoding='utf-8') as f:
            content = f.read()
        
        # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–±—â–µ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ parse_mode
        parse_mode_count = content.count('parse_mode="HTML"')
        answer_count = content.count('.answer(')
        edit_text_count = content.count('.edit_text(')
        
        print(f"   üìä –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        print(f"   ‚Ä¢ –ù–∞–π–¥–µ–Ω–æ {parse_mode_count} –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π parse_mode='HTML'")
        print(f"   ‚Ä¢ –ù–∞–π–¥–µ–Ω–æ {answer_count} –æ—Ç–ø—Ä–∞–≤–æ–∫ —Å–æ–æ–±—â–µ–Ω–∏–π (.answer)")
        print(f"   ‚Ä¢ –ù–∞–π–¥–µ–Ω–æ {edit_text_count} —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–π (.edit_text)")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—É—é —Ñ—É–Ω–∫—Ü–∏—é
        all_functions_found = True
        functions_with_parse_mode = 0
        
        for func_name in functions_to_check:
            # –ò—â–µ–º –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
            func_def_pattern = f"async def {func_name}("
            if func_def_pattern in content:
                print(f"   ‚úÖ {func_name} - –Ω–∞–π–¥–µ–Ω–∞")
                
                # –ò—â–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ .answer –∏–ª–∏ .edit_text –≤ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
                func_start = content.find(func_def_pattern)
                func_end = content.find("async def ", func_start + 1)
                if func_end == -1:
                    func_end = len(content)
                
                func_content = content[func_start:func_end]
                
                if '.answer(' in func_content or '.edit_text(' in func_content:
                    if 'parse_mode="HTML"' in func_content:
                        functions_with_parse_mode += 1
                        print(f"      ‚úÖ parse_mode='HTML' –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
                    else:
                        print(f"      ‚ùå parse_mode='HTML' –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
                else:
                    print(f"      ‚ÑπÔ∏è  –ù–µ—Ç .answer() –∏–ª–∏ .edit_text()")
            else:
                print(f"   ‚ùå {func_name} - –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
                all_functions_found = False
        
        print(f"\nüìã –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏:")
        print(f"   ‚Ä¢ –§—É–Ω–∫—Ü–∏–π –∏–∑ —á–µ–∫-–ª–∏—Å—Ç–∞ –Ω–∞–π–¥–µ–Ω–æ: {len([f for f in functions_to_check if f'async def {f}(' in content])}/{len(functions_to_check)}")
        print(f"   ‚Ä¢ –§—É–Ω–∫—Ü–∏–π —Å parse_mode='HTML': {functions_with_parse_mode}")
        
        if parse_mode_count > 0:
            print(f"   ‚úÖ parse_mode='HTML' –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ –∫–æ–¥–µ")
        else:
            print(f"   ‚ùå parse_mode='HTML' –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∫–æ–¥–µ")
            
        return parse_mode_count > 0 and functions_with_parse_mode > 0
            
    except FileNotFoundError:
        print("   ‚ùå –§–∞–π–ª modules/learn_cards.py –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ: {e}")
        return False

def check_main_py():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç main.py –Ω–∞ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π main"""
    
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ main.py...")
    
    try:
        with open('main.py', 'r', encoding='utf-8') as f:
            content = f.read()
        
        # –°—á–∏—Ç–∞–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ main
        main_functions = content.count('async def main(')
        parse_mode_default = 'parse_mode=ParseMode.HTML' in content
        
        print(f"   üìä –ù–∞–π–¥–µ–Ω–æ —Ñ—É–Ω–∫—Ü–∏–π main: {main_functions}")
        print(f"   üìä parse_mode –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: {'‚úÖ' if parse_mode_default else '‚ùå'}")
        
        if main_functions == 1:
            print("   ‚úÖ –î—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π main –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ")
            return True
        else:
            print(f"   ‚ùå –ü—Ä–æ–±–ª–µ–º–∞: –Ω–∞–π–¥–µ–Ω–æ {main_functions} —Ñ—É–Ω–∫—Ü–∏–π main")
            return False
            
    except FileNotFoundError:
        print("   ‚ùå –§–∞–π–ª main.py –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ: {e}")
        return False

if __name__ == "__main__":
    print("üöÄ –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π HTML-—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    learn_cards_ok = check_learn_cards_functions()
    main_ok = check_main_py()
    
    print("\nüìã –ò–¢–û–ì–û–í–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢:")
    print(f"   {'‚úÖ' if learn_cards_ok else '‚ùå'} modules/learn_cards.py –∏—Å–ø—Ä–∞–≤–ª–µ–Ω")
    print(f"   {'‚úÖ' if main_ok else '‚ùå'} main.py –∏—Å–ø—Ä–∞–≤–ª–µ–Ω")
    
    if learn_cards_ok and main_ok:
        print("\nüéâ –í–°–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –ü–†–ò–ú–ï–ù–ï–ù–´ –£–°–ü–ï–®–ù–û!")
        print("   HTML-—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ–ª–∂–Ω–æ —Ç–µ–ø–µ—Ä—å —Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.")
        print("\nüí° –ì–æ—Ç–æ–≤–æ –∫ –¥–µ–ø–ª–æ—é:")
        print("   git add .")
        print("   git commit -m 'Fix HTML formatting - complete solution'")
        print("   git push origin master")
    else:
        print("\n‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç—Ä–µ–±—É—é—Ç –≤–Ω–∏–º–∞–Ω–∏—è.")
    
    print("\nüß™ –ü–æ—Å–ª–µ –¥–µ–ø–ª–æ—è –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ:")
    print("   ‚Ä¢ /learn_cards - –ø–æ–ª–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ")
    print("   ‚Ä¢ /practice - –±—ã—Å—Ç—Ä–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞")
    print("   ‚Ä¢ –í—Å–µ HTML-—Ç–µ–≥–∏ –¥–æ–ª–∂–Ω—ã –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
