"""
–ú–æ–¥—É–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞–º–∏ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏.
"""
import logging
from aiogram import types
from aiogram.exceptions import TelegramBadRequest
from database.db import Database
from modules.logging_service import LoggingService

logger = logging.getLogger(__name__)


async def show_admin_marketplaces(message: types.Message, db: Database, logger_service: LoggingService, user_id: int):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞–º–∏."""
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    try:
        from config import ADMIN_IDS
        if str(user_id) not in ADMIN_IDS:
            await message.edit_text("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏.", parse_mode="HTML")
            return
    except ImportError as e:
        logger.error(f"Failed to import ADMIN_IDS: {e}")
        await message.edit_text("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞.", parse_mode="HTML")
        return
    
    try:
        text = """üõçÔ∏è <b>–£–ü–†–ê–í–õ–ï–ù–ò–ï –ú–ê–†–ö–ï–¢–ü–õ–ï–ô–°–ê–ú–ò</b>

<b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å—ã:</b>
‚Ä¢ <b>Ozon</b> - –û—Å—Ç–∞—Ç–∫–∏, –ø—Ä–æ–¥–∞–∂–∏, —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è
‚Ä¢ <b>Wildberries</b> - –û—Å—Ç–∞—Ç–∫–∏, —Å–∫–ª–∞–¥—ã, —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è
‚Ä¢ <b>Google Sheets</b> - –¢–∞–±–ª–∏—Ü—ã —Å –¥–∞–Ω–Ω—ã–º–∏

<b>–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>

<b>üî∏ Ozon:</b>
‚Ä¢ <code>/ozon_test</code> - –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
‚Ä¢ <code>/ozon_products</code> - –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ (–ø–µ—Ä–≤—ã–µ 5)
‚Ä¢ <code>/ozon_products_all</code> - –ü–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤
‚Ä¢ <code>/ozon_stocks</code> - –û—Å—Ç–∞—Ç–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤
‚Ä¢ <code>/ozon_stocks_detailed</code> - –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—Å—Ç–∞—Ç–∫–∞—Ö
‚Ä¢ <code>/ozon_sync_all</code> - –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å Google Sheets

<b>üî∏ Wildberries:</b>
‚Ä¢ <code>/wb_test</code> - –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
‚Ä¢ <code>/wb_products</code> - –°–ø–∏—Å–æ–∫ –∞—Ä—Ç–∏–∫—É–ª–æ–≤
‚Ä¢ <code>/wb_stats</code> - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ—Å—Ç–∞—Ç–∫–æ–≤
‚Ä¢ <code>/wb_warehouses</code> - –°–ø–∏—Å–æ–∫ —Å–∫–ª–∞–¥–æ–≤
‚Ä¢ <code>/wb_sync_all</code> - –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å Google Sheets

<b>üî∏ Google Sheets:</b>
‚Ä¢ <code>/sheets_test</code> - –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
‚Ä¢ <code>/sheets_info SPREADSHEET_ID</code> - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–∞–±–ª–∏—Ü–µ
‚Ä¢ <code>/sheets_read SPREADSHEET_ID [SHEET_NAME]</code> - –ß—Ç–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö

<i>üí° –í—Å–µ –∫–æ–º–∞–Ω–¥—ã –¥–æ—Å—Ç—É–ø–Ω—ã —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º</i>"""
        
        keyboard = types.InlineKeyboardMarkup(inline_keyboard=[
            [types.InlineKeyboardButton(text="üîÑ –û–±–Ω–æ–≤–∏—Ç—å", callback_data="admin_marketplaces")],
            [types.InlineKeyboardButton(text="‚Üê –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="admin_main")]
        ])
        
        try:
            await message.edit_text(text, reply_markup=keyboard, parse_mode="HTML")
        except TelegramBadRequest as e:
            if "message is not modified" not in str(e):
                raise
        
        await logger_service.log_action(user_id, "admin_marketplaces_viewed", {})
        
    except Exception as e:
        logger.error(f"Error showing admin marketplaces: {e}", exc_info=True)
        text = "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –º–µ–Ω—é –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤"
        keyboard = types.InlineKeyboardMarkup(inline_keyboard=[
            [types.InlineKeyboardButton(text="‚Üê –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="admin_main")]
        ])
        try:
            await message.edit_text(text, reply_markup=keyboard)
        except TelegramBadRequest as e:
            if "message is not modified" not in str(e):
                raise


def show_admin_main_menu():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∞–¥–º–∏–Ω–∫–∏."""
    text = """üìä <b>–ê–î–ú–ò–ù –ü–ê–ù–ï–õ–¨</b>

–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –º–µ—Ç—Ä–∏–∫:"""
    
    keyboard = types.InlineKeyboardMarkup(inline_keyboard=[
        [types.InlineKeyboardButton(text="üîç –ì–ª–∞–≤–Ω—ã–π –¥–∞—à–±–æ—Ä–¥", callback_data="admin_dashboard")],
        [types.InlineKeyboardButton(text="üìà –ú–µ—Ç—Ä–∏–∫–∏ —É–¥–µ—Ä–∂–∞–Ω–∏—è", callback_data="admin_retention")],
        [types.InlineKeyboardButton(text="üîÑ –í–æ—Ä–æ–Ω–∫–∞ '–ö–∞—Ä—Ç–∞ –¥–Ω—è'", callback_data="admin_funnel")],
        [types.InlineKeyboardButton(text="üíé –ú–µ—Ç—Ä–∏–∫–∏ —Ü–µ–Ω–Ω–æ—Å—Ç–∏", callback_data="admin_value")],
        [types.InlineKeyboardButton(text="üÉè –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–æ–ª–æ–¥", callback_data="admin_decks")],
        [types.InlineKeyboardButton(text="üåô –í–µ—á–µ—Ä–Ω—è—è —Ä–µ—Ñ–ª–µ–∫—Å–∏—è", callback_data="admin_reflections")],
        [types.InlineKeyboardButton(text="üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏", callback_data="admin_users")],
        [types.InlineKeyboardButton(text="üìã –î–µ—Ç–∞–ª—å–Ω—ã–µ –ª–æ–≥–∏", callback_data="admin_logs")],
        [types.InlineKeyboardButton(text="üìù –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ—Å—Ç–∞–º–∏", callback_data="admin_posts")],
        [types.InlineKeyboardButton(text="üõçÔ∏è –ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å—ã", callback_data="admin_marketplaces")]
    ])
    
    return text, keyboard

