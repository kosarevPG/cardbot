#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —É—Å–ø–µ—à–Ω–æ—Å—Ç–∏ –¥–µ–ø–ª–æ—è –≤ production
"""
import time
import requests
from datetime import datetime

def check_bot_status():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞ —á–µ—Ä–µ–∑ Telegram API"""
    try:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º production —Ç–æ–∫–µ–Ω
        from config import TOKEN
        url = f"https://api.telegram.org/bot{TOKEN}/getMe"
        response = requests.get(url, timeout=10)
        
        if response.status_code == 200:
            data = response.json()
            if data.get('ok'):
                bot_info = data['result']
                print(f"‚úÖ –ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω: @{bot_info['username']} ({bot_info['first_name']})")
                return True
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ API: {data.get('description', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")
                return False
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –±–æ—Ç–∞: {e}")
        return False

def check_amvera_logs():
    """–ò–º–∏—Ç–∏—Ä—É–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫—É –ª–æ–≥–æ–≤ Amvera (–≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –Ω—É–∂–Ω–æ —Å–º–æ—Ç—Ä–µ—Ç—å –≤ –ø–∞–Ω–µ–ª–∏ Amvera)"""
    print("üìã –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–æ–≥–æ–≤ Amvera:")
    print("1. –ó–∞–π–¥–∏—Ç–µ –≤ –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è Amvera")
    print("2. –ù–∞–π–¥–∏—Ç–µ –≤–∞—à –ø—Ä–æ–µ–∫—Ç cardbot")
    print("3. –û—Ç–∫—Ä–æ–π—Ç–µ —Ä–∞–∑–¥–µ–ª '–õ–æ–≥–∏'")
    print("4. –ò—â–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏—è:")
    print("   ‚úÖ 'Database connection initialized'")
    print("   ‚úÖ 'Database migrations finished successfully'")
    print("   ‚úÖ 'Bot commands set successfully'")
    print("   ‚úÖ 'Run polling for bot'")
    print("   ‚ùå –õ—é–±—ã–µ –æ—à–∏–±–∫–∏ (ERROR, CRITICAL)")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"""
    print("üöÄ –ú–û–ù–ò–¢–û–†–ò–ù–ì –î–ï–ü–õ–û–Ø –í PRODUCTION")
    print("=" * 50)
    print(f"‚è∞ –í—Ä–µ–º—è –ø—Ä–æ–≤–µ—Ä–∫–∏: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    print()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –±–æ—Ç–∞...")
    bot_ok = check_bot_status()
    
    print()
    print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ú–û–ù–ò–¢–û–†–ò–ù–ì–ê:")
    print(f"ü§ñ –°—Ç–∞—Ç—É—Å –±–æ—Ç–∞: {'‚úÖ –ê–ö–¢–ò–í–ï–ù' if bot_ok else '‚ùå –ù–ï –ê–ö–¢–ò–í–ï–ù'}")
    
    if bot_ok:
        print()
        print("üéâ –î–ï–ü–õ–û–ô –£–°–ü–ï–®–ï–ù!")
        print()
        print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π:")
        print("1. –û—Ç–ø—Ä–∞–≤—å—Ç–µ /start –±–æ—Ç—É")
        print("2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ /admin (–µ—Å–ª–∏ –≤—ã –∞–¥–º–∏–Ω)")
        print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ /user_profile")
        print("4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ /scenario_stats")
        print("5. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –∫–∞—Ä—Ç—É –¥–Ω—è")
    else:
        print()
        print("‚ö†Ô∏è –ü–†–û–ë–õ–ï–ú–´ –° –î–ï–ü–õ–û–ï–ú!")
        print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ Amvera:")
        check_amvera_logs()
    
    print()
    print("üìã –ß–ï–ö-–õ–ò–°–¢ –ü–û–°–õ–ï –î–ï–ü–õ–û–Ø:")
    print("‚ñ° –ë–æ—Ç –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—ã")
    print("‚ñ° –ê–¥–º–∏–Ω—Å–∫–∞—è –ø–∞–Ω–µ–ª—å /admin —Ä–∞–±–æ—Ç–∞–µ—Ç")
    print("‚ñ° –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å /user_profile —Ä–∞–±–æ—Ç–∞–µ—Ç")
    print("‚ñ° –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ /scenario_stats —Ä–∞–±–æ—Ç–∞–µ—Ç")
    print("‚ñ° –ö–∞—Ä—Ç–∞ –¥–Ω—è —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    print("‚ñ° –í–µ—á–µ—Ä–Ω—è—è —Ä–µ—Ñ–ª–µ–∫—Å–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç")
    print("‚ñ° –ê–¥–º–∏–Ω—Å–∫–∏–µ ID –∏—Å–∫–ª—é—á–µ–Ω—ã –∏–∑ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏")

if __name__ == "__main__":
    main() 