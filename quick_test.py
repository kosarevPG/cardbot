#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –º–µ—Ç—Ä–∏–∫
"""

import sqlite3

db_path = "bot (7).db"

print(f"üìÅ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: {db_path}")
print()

try:
    conn = sqlite3.connect(db_path)
    conn.row_factory = sqlite3.Row
    cursor = conn.cursor()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∫–∏–µ –¥–∞—Ç—ã –µ—Å—Ç—å –≤ v_dau_daily
    print("üìÖ –î–∞—Ç—ã –≤ v_dau_daily:")
    cursor.execute("""
        SELECT d_local, dau
        FROM v_dau_daily
        ORDER BY d_local DESC
        LIMIT 10
    """)
    dates = cursor.fetchall()
    if dates:
        for d in dates:
            print(f"  ‚Ä¢ {d['d_local']}: DAU = {d['dau']}")
    else:
        print("  ‚ö†Ô∏è  –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö")
    
    print()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Å—Å–∏–∏ –ø–æ –¥–Ω—è–º
    print("üìÖ –°–µ—Å—Å–∏–∏ –ø–æ –¥–Ω—è–º:")
    cursor.execute("""
        SELECT d_local, scenario, started, completed, completion_rate
        FROM v_sessions_daily
        ORDER BY d_local DESC
        LIMIT 10
    """)
    sessions = cursor.fetchall()
    if sessions:
        for s in sessions:
            print(f"  ‚Ä¢ {s['d_local']} | {s['scenario']}: {s['started']} –∑–∞–ø—É—â–µ–Ω–æ, {s['completed']} –∑–∞–≤–µ—Ä—à–µ–Ω–æ ({s['completion_rate']:.1f}%)")
    else:
        print("  ‚ö†Ô∏è  –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö")
    
    print()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∫–æ–≥–¥–∞ –±—ã–ª–∞ –ø–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
    print("üìä –ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:")
    cursor.execute("""
        SELECT d_local, COUNT(*) as events
        FROM v_events
        GROUP BY d_local
        ORDER BY d_local DESC
        LIMIT 5
    """)
    activity = cursor.fetchall()
    if activity:
        for a in activity:
            print(f"  ‚Ä¢ {a['d_local']}: {a['events']} —Å–æ–±—ã—Ç–∏–π")
    else:
        print("  ‚ö†Ô∏è  –ù–µ—Ç —Å–æ–±—ã—Ç–∏–π")
    
    print()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ scenario_started –∏ completed
    print("üìä –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è (–≤—Å–µ–≥–æ –∑–∞ –≤—Å–µ –≤—Ä–µ–º—è):")
    cursor.execute("""
        SELECT 
            SUM(CASE WHEN event = 'scenario_started' THEN 1 ELSE 0 END) as started_count,
            SUM(CASE WHEN event = 'completed' THEN 1 ELSE 0 END) as completed_count,
            SUM(CASE WHEN event = 'initial_resource_selected' THEN 1 ELSE 0 END) as resource_count
        FROM v_events
    """)
    row = cursor.fetchone()
    print(f"  ‚Ä¢ scenario_started: {row['started_count']}")
    print(f"  ‚Ä¢ completed: {row['completed_count']}")
    print(f"  ‚Ä¢ initial_resource_selected: {row['resource_count']}")
    
    print()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—ã—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ scenario_logs
    print("üìä –°—ã—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ (scenario_logs) –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –¥–µ–Ω—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏:")
    cursor.execute("""
        SELECT 
            step,
            COUNT(*) as count
        FROM scenario_logs
        WHERE scenario = 'card_of_day'
        GROUP BY step
        ORDER BY count DESC
        LIMIT 10
    """)
    raw_steps = cursor.fetchall()
    if raw_steps:
        for step in raw_steps:
            print(f"  ‚Ä¢ {step['step']}: {step['count']}")
    else:
        print("  ‚ö†Ô∏è  –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö")
    
    print()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º session_id –≤ metadata
    print("üìä Session_id –≤ metadata:")
    cursor.execute("""
        SELECT 
            COUNT(*) as total_logs,
            SUM(CASE WHEN json_extract(metadata, '$.session_id') IS NOT NULL THEN 1 ELSE 0 END) as with_session,
            SUM(CASE WHEN json_extract(metadata, '$.session_id') IS NULL THEN 1 ELSE 0 END) as without_session
        FROM scenario_logs
        WHERE scenario = 'card_of_day'
    """)
    row = cursor.fetchone()
    print(f"  ‚Ä¢ –í—Å–µ–≥–æ –ª–æ–≥–æ–≤: {row['total_logs']}")
    print(f"  ‚Ä¢ –° session_id: {row['with_session']}")
    print(f"  ‚Ä¢ –ë–µ–∑ session_id: {row['without_session']}")
    
    if row['without_session'] > 0 and row['with_session'] == 0:
        print()
        print("  ‚ö†Ô∏è  –ü–†–û–ë–õ–ï–ú–ê: –ù–ï–¢ session_id –≤ metadata!")
        print("     –≠—Ç–æ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ –∫–æ–¥ —Å session_id –µ—â–µ –Ω–µ –∑–∞–ø—É—Å–∫–∞–ª—Å—è.")
        print("     v_sessions –±—É–¥–µ—Ç –ø—É—Å—Ç—ã–º, –ø–æ—Ç–æ–º—É —á—Ç–æ –æ–Ω –≥—Ä—É–ø–ø–∏—Ä—É–µ—Ç –ø–æ session_id.")
    
    print()
    
    # –ò—Ç–æ–≥–æ–≤—ã–π –¥–∏–∞–≥–Ω–æ–∑
    print("=" * 60)
    print("üéØ –î–ò–ê–ì–ù–û–ó:")
    print("=" * 60)
    
    if row['started_count'] == 0:
        print("‚ùå –°–æ–±—ã—Ç–∏–µ 'scenario_started' –ù–ï –õ–û–ì–ò–†–£–ï–¢–°–Ø")
        print("   –≠—Ç–æ –Ω–æ–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –º—ã —Ç–æ–ª—å–∫–æ —á—Ç–æ –¥–æ–±–∞–≤–∏–ª–∏.")
        print("   –ü–æ—Å–ª–µ –¥–µ–ø–ª–æ—è –æ–Ω–æ –ø–æ—è–≤–∏—Ç—Å—è.")
    else:
        print("‚úÖ –°–æ–±—ã—Ç–∏–µ 'scenario_started' –ª–æ–≥–∏—Ä—É–µ—Ç—Å—è")
    
    if row['completed_count'] == 0:
        print("‚ùå –°–æ–±—ã—Ç–∏–µ 'completed' –ù–ï –õ–û–ì–ò–†–£–ï–¢–°–Ø")
        print("   –≠—Ç–æ –Ω–æ–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –º—ã —Ç–æ–ª—å–∫–æ —á—Ç–æ –¥–æ–±–∞–≤–∏–ª–∏.")
        print("   –ü–æ—Å–ª–µ –¥–µ–ø–ª–æ—è –æ–Ω–æ –ø–æ—è–≤–∏—Ç—Å—è.")
    else:
        print("‚úÖ –°–æ–±—ã—Ç–∏–µ 'completed' –ª–æ–≥–∏—Ä—É–µ—Ç—Å—è")
    
    if row['without_session'] > 0 and row['with_session'] == 0:
        print("‚ùå session_id –ù–ï –°–û–•–†–ê–ù–Ø–ï–¢–°–Ø –≤ metadata")
        print("   v_sessions –±—É–¥–µ—Ç –ø—É—Å—Ç—ã–º –±–µ–∑ session_id.")
    else:
        print("‚úÖ session_id —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –≤ metadata")
    
    print()
    print("üöÄ –†–ï–®–ï–ù–ò–ï:")
    print("   –ó–∞–¥–µ–ø–ª–æ–π –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –∫–æ–¥ - –Ω–æ–≤—ã–µ —Å–æ–±—ã—Ç–∏—è –Ω–∞—á–Ω—É—Ç –ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å—Å—è!")
    print("   VIEW —É–∂–µ –≥–æ—Ç–æ–≤—ã –∏ –±—É–¥—É—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –ø–µ—Ä–≤—ã—Ö –Ω–æ–≤—ã—Ö —Å–æ–±—ã—Ç–∏–π.")
    
    conn.close()
    
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    import traceback
    traceback.print_exc()

