#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—Ç–∫–∞—Ç–∞ –∫ —Ä–∞–±–æ—á–µ–π –≤–µ—Ä—Å–∏–∏ –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏
"""

import os
import shutil
import subprocess
import sys

def rollback_to_working_version():
    """–û—Ç–∫–∞—Ç –∫ —Ä–∞–±–æ—á–µ–π –≤–µ—Ä—Å–∏–∏ –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏"""
    print("üîÑ –ù–∞—á–∏–Ω–∞–µ–º –æ—Ç–∫–∞—Ç –∫ —Ä–∞–±–æ—á–µ–π –≤–µ—Ä—Å–∏–∏...")
    
    backup_dir = "backup_20250729_223246"
    if not os.path.exists(backup_dir):
        print(f"‚ùå –û—à–∏–±–∫–∞: –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è {backup_dir} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return False
    
    # –§–∞–π–ª—ã –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
    files_to_restore = [
        ("main.py", "main.py"),
        ("modules/card_of_the_day.py", "modules/card_of_the_day.py"),
        ("modules/evening_reflection.py", "modules/evening_reflection.py"),
        ("modules/ai_service.py", "modules/ai_service.py"),
        ("modules/user_management.py", "modules/user_management.py"),
        ("database/db.py", "database/db.py"),
        ("config.py", "config.py")
    ]
    
    restored_files = []
    
    for backup_file, target_file in files_to_restore:
        backup_path = os.path.join(backup_dir, backup_file)
        if os.path.exists(backup_path):
            try:
                # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é —Ç–µ–∫—É—â–µ–≥–æ —Ñ–∞–π–ª–∞
                if os.path.exists(target_file):
                    backup_current = f"{target_file}.backup_before_rollback"
                    shutil.copy2(target_file, backup_current)
                    print(f"üì¶ –°–æ–∑–¥–∞–Ω–∞ —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è: {backup_current}")
                
                # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–∞–π–ª
                shutil.copy2(backup_path, target_file)
                restored_files.append(target_file)
                print(f"‚úÖ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {target_file}")
                
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ {target_file}: {e}")
                return False
        else:
            print(f"‚ö†Ô∏è  –§–∞–π–ª {backup_path} –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º")
    
    print(f"‚úÖ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ {len(restored_files)} —Ñ–∞–π–ª–æ–≤")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏–Ω—Ç–∞–∫—Å–∏—Å Python
    print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏–Ω—Ç–∞–∫—Å–∏—Å Python...")
    try:
        result = subprocess.run([sys.executable, "-m", "py_compile", "main.py"], 
                              capture_output=True, text=True)
        if result.returncode == 0:
            print("‚úÖ –°–∏–Ω—Ç–∞–∫—Å–∏—Å main.py –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ –≤ main.py: {result.stderr}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞: {e}")
        return False
    
    # –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –¥–µ–ø–ª–æ—è –æ—Ç–∫–∞—Ç–∞
    commands = [
        "git add .",
        "git commit -m 'Rollback to working version from backup'",
        "git push origin main"
    ]
    
    for cmd in commands:
        print(f"üîÑ –í—ã–ø–æ–ª–Ω—è–µ–º: {cmd}")
        try:
            result = subprocess.run(cmd, shell=True, check=True, capture_output=True, text=True)
            print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ: {cmd}")
        except subprocess.CalledProcessError as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ '{cmd}': {e}")
            print(f"stderr: {e.stderr}")
            return False
    
    print("üéâ –û—Ç–∫–∞—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
    print("üìù –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç")
    return True

if __name__ == "__main__":
    success = rollback_to_working_version()
    sys.exit(0 if success else 1) 