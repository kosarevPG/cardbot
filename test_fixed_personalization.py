#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏
"""

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

def test_fixed_personalization():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—é"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏")
    print("=" * 50)
    
    try:
        from modules.texts.gender_utils import personalize_text, GenderDeclension
        
        # –¢–µ—Å—Ç–æ–≤—ã–µ —Ç–µ–∫—Å—Ç—ã
        test_texts = [
            "–ü—Ä–∏–≤–µ—Ç{name_part}! –¢—ã{ready} –≥–æ—Ç–æ–≤{ready} –Ω–∞—á–∞—Ç—å?",
            "–û—Ç–ª–∏—á–Ω–æ, {name}! –¢—ã{ready} —Å–ø—Ä–∞–≤–∏–ª{ready}—Å—è!",
            "–¢–≤–æ–π{your} –∑–∞–ø—Ä–æ—Å –æ—á–µ–Ω—å —Ö–æ—Ä–æ—à.",
            "–¢—ã{ready} —É–≤–µ—Ä–µ–Ω{ready} –≤ —Å–µ–±–µ?"
        ]
        
        # –¢–µ—Å—Ç–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
        test_users = [
            {'name': '–ê–Ω–Ω–∞', 'gender': 'female', 'has_name': True},
            {'name': '–ò–≤–∞–Ω', 'gender': 'male', 'has_name': True},
            {'name': '', 'gender': 'neutral', 'has_name': False}
        ]
        
        print("1. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–æ–≤:")
        print()
        
        for i, text in enumerate(test_texts, 1):
            print(f"–¢–µ–∫—Å—Ç {i}: '{text}'")
            
            for user_info in test_users:
                result = personalize_text(text, user_info)
                name_display = user_info['name'] or '–ë–µ–∑ –∏–º–µ–Ω–∏'
                print(f"  {name_display} ({user_info['gender']}): '{result}'")
            print()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–∫–ª–æ–Ω–µ–Ω–∏—è –æ—Ç–¥–µ–ª—å–Ω–æ
        print("2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∫–ª–æ–Ω–µ–Ω–∏–π:")
        test_declensions = [
            "–¢—ã{ready} –≥–æ—Ç–æ–≤{ready} –Ω–∞—á–∞—Ç—å?",
            "–¢—ã{ready} —É–≤–µ—Ä–µ–Ω{ready} –≤ —Å–µ–±–µ?"
        ]
        
        for text in test_declensions:
            print(f"–ò—Å—Ö–æ–¥–Ω—ã–π: '{text}'")
            for gender in ['male', 'female', 'neutral']:
                result = GenderDeclension.apply_declension(text, gender)
                print(f"  {gender}: '{result}'")
            print()
        
        print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
        return True
        
    except Exception as e:
        print(f"‚ùå –û–®–ò–ë–ö–ê: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    success = test_fixed_personalization()
    print(f"\n–†–µ–∑—É–ª—å—Ç–∞—Ç: {'–£–°–ü–ï–•' if success else '–û–®–ò–ë–ö–ê'}")
    sys.exit(0 if success else 1)

