#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–æ—Ä–æ–Ω–∫–∏ —Å —Ä–∞–∑–Ω—ã–º–∏ –ø–µ—Ä–∏–æ–¥–∞–º–∏
"""

import sqlite3
import os

DB_PATH = "database/dev.db"

def test_funnel_periods():
    if not os.path.exists(DB_PATH):
        print("‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return
    
    conn = sqlite3.connect(DB_PATH)
    conn.row_factory = sqlite3.Row
    
    try:
        periods = [1, 7, 30]
        
        for days in periods:
            print(f"\nüìä –í–û–†–û–ù–ö–ê '–ö–ê–†–¢–ê –î–ù–Ø' (–∑–∞ {days} {'–¥–µ–Ω—å' if days == 1 else '–¥–Ω–µ–π'})")
            print("=" * 60)
            
            # –û—Å–Ω–æ–≤–Ω—ã–µ —à–∞–≥–∏ –≤–æ—Ä–æ–Ω–∫–∏
            steps_data = {}
            step_names = {
                'started': '1Ô∏è‚É£ –ù–∞—á–∞–ª–∏ —Å–µ—Å—Å–∏—é',
                'initial_resource_selected': '2Ô∏è‚É£ –í—ã–±—Ä–∞–ª–∏ —Ä–µ—Å—É—Ä—Å', 
                'request_type_selected': '3Ô∏è‚É£ –í—ã–±—Ä–∞–ª–∏ —Ç–∏–ø –∑–∞–ø—Ä–æ—Å–∞',
                'card_drawn': '4Ô∏è‚É£ –í—ã—Ç—è–Ω—É–ª–∏ –∫–∞—Ä—Ç—É',
                'initial_response_provided': '5Ô∏è‚É£ –ù–∞–ø–∏—Å–∞–ª–∏ –∞—Å—Å–æ—Ü–∏–∞—Ü–∏—é',
                'ai_reflection_choice': '6Ô∏è‚É£ –í—ã–±—Ä–∞–ª–∏ –¥–∏–∞–ª–æ–≥',
                'completed': '7Ô∏è‚É£ –ó–∞–≤–µ—Ä—à–∏–ª–∏'
            }
            
            for step_name in step_names.keys():
                cursor = conn.execute(f"""
                    SELECT COUNT(DISTINCT user_id) as count
                    FROM scenario_logs 
                    WHERE scenario = 'card_of_day' 
                    AND step = ?
                    AND timestamp >= datetime('now', '-{days} days')
                """, (step_name,))
                count = cursor.fetchone()['count']
                steps_data[step_name] = count
            
            # –í—ã–≤–æ–¥–∏–º –≤–æ—Ä–æ–Ω–∫—É
            for step, count in steps_data.items():
                print(f"  {step_names[step]}: {count}")
            
            # –ö–æ–Ω–≤–µ—Ä—Å–∏—è
            if steps_data['started'] > 0:
                conversion = (steps_data['completed'] / steps_data['started']) * 100
                print(f"\n‚úÖ –ö–û–ù–í–ï–†–°–ò–Ø: {steps_data['completed']}/{steps_data['started']} = {conversion:.1f}%")
                
                # –ê–Ω–∞–ª–∏–∑ –ø–æ—Ç–µ—Ä—å
                print(f"üö® –ü–û–¢–ï–†–ò:")
                if steps_data['started'] - steps_data['initial_resource_selected'] > 0:
                    print(f"  ‚Ä¢ –®–∞–≥ 1‚Üí2: {steps_data['started'] - steps_data['initial_resource_selected']} ({((steps_data['started'] - steps_data['initial_resource_selected']) / steps_data['started'] * 100):.1f}%)")
                if steps_data['initial_resource_selected'] - steps_data['request_type_selected'] > 0:
                    print(f"  ‚Ä¢ –®–∞–≥ 2‚Üí3: {steps_data['initial_resource_selected'] - steps_data['request_type_selected']} ({((steps_data['initial_resource_selected'] - steps_data['request_type_selected']) / steps_data['started'] * 100):.1f}%)")
                if steps_data['request_type_selected'] - steps_data['card_drawn'] > 0:
                    print(f"  ‚Ä¢ –®–∞–≥ 3‚Üí4: {steps_data['request_type_selected'] - steps_data['card_drawn']} ({((steps_data['request_type_selected'] - steps_data['card_drawn']) / steps_data['started'] * 100):.1f}%)")
                if steps_data['card_drawn'] - steps_data['initial_response_provided'] > 0:
                    print(f"  ‚Ä¢ –®–∞–≥ 4‚Üí5: {steps_data['card_drawn'] - steps_data['initial_response_provided']} ({((steps_data['card_drawn'] - steps_data['initial_response_provided']) / steps_data['started'] * 100):.1f}%)")
                if steps_data['initial_response_provided'] - steps_data['ai_reflection_choice'] > 0:
                    print(f"  ‚Ä¢ –®–∞–≥ 5‚Üí6: {steps_data['initial_response_provided'] - steps_data['ai_reflection_choice']} ({((steps_data['initial_response_provided'] - steps_data['ai_reflection_choice']) / steps_data['started'] * 100):.1f}%)")
                if steps_data['ai_reflection_choice'] - steps_data['completed'] > 0:
                    print(f"  ‚Ä¢ –®–∞–≥ 6‚Üí7: {steps_data['ai_reflection_choice'] - steps_data['completed']} ({((steps_data['ai_reflection_choice'] - steps_data['completed']) / steps_data['started'] * 100):.1f}%)")
            else:
                print(f"\n‚úÖ –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –∑–∞ {days} {'–¥–µ–Ω—å' if days == 1 else '–¥–Ω–µ–π'}")
        
        print(f"\nüéØ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
        print(f"  ‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ '–°–µ–≥–æ–¥–Ω—è' –¥–ª—è –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞")
        print(f"  ‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ '7 –¥–Ω–µ–π' –¥–ª—è –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞")
        print(f"  ‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ '30 –¥–Ω–µ–π' –¥–ª—è –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã—Ö —Ç—Ä–µ–Ω–¥–æ–≤")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    finally:
        conn.close()

if __name__ == "__main__":
    test_funnel_periods() 