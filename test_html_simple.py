#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç HTML-—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è Telegram
"""

def test_html_tags():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç HTML-—Ç–µ–≥–∏, –∫–æ—Ç–æ—Ä—ã–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –≤ –±–æ—Ç–µ"""
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ HTML-—Ç–µ–≥–æ–≤...")
    
    # –¢–µ–≥–∏, –∫–æ—Ç–æ—Ä—ã–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –≤ learning.py
    test_texts = [
        {
            "name": "theory_1",
            "text": "üéØ <b>–ß—Ç–æ —Ç–∞–∫–æ–µ –ú–ê–ö-–∫–∞—Ä—Ç—ã</b>\n\n–ö–∞—Ä—Ç—ã –ø–æ–º–æ–≥–∞—é—Ç —É–≤–∏–¥–µ—Ç—å –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π —Å–º—ã—Å–ª —á–µ—Ä–µ–∑ –æ–±—Ä–∞–∑—ã, –∞—Å—Å–æ—Ü–∏–∞—Ü–∏–∏ –∏ —á—É–≤—Å—Ç–≤–∞.\n–ü—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –Ω–µ—Ç ‚Äî –≤–∞–∂–Ω–æ, —á—Ç–æ —Ç—ã <b>–≤–∏–¥–∏—à—å</b> –∏ <b>—á—É–≤—Å—Ç–≤—É–µ—à—å</b>.\n\n–ß–∏–ø—ã: <code>–ß—Ç–æ —è –≤–∏–∂—É?</code> ¬∑ <code>–ì–¥–µ —ç—Ç–æ –≤–æ –º–Ω–µ?</code> ¬∑ <code>–ö–∞–∫–æ–π –º–∞–ª–µ–Ω—å–∫–∏–π —à–∞–≥?</code>",
            "expected": "HTML —Å —Ç–µ–≥–∞–º–∏ <b> –∏ <code>"
        },
        {
            "name": "theory_2", 
            "text": "üîé <b>–ó–∞—á–µ–º –Ω—É–∂–µ–Ω –∑–∞–ø—Ä–æ—Å</b>\n\n–ó–∞–ø—Ä–æ—Å ‚Äî –∫–∞–∫ —Ñ–æ–Ω–∞—Ä–∏–∫ –≤–Ω–∏–º–∞–Ω–∏—è –≤–Ω—É—Ç—Ä—å.\n\n–ë–µ–∑ –∑–∞–ø—Ä–æ—Å–∞ ‚Äî –ø—Ä–æ—Å—Ç–æ –∫–∞—Ä—Ç–∏–Ω–∫–∞.\n–° –∑–∞–ø—Ä–æ—Å–æ–º ‚Äî <b>–∂–∏–≤–æ–µ –∑–µ—Ä–∫–∞–ª–æ</b> —Ç–≤–æ–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏ —à–∞–≥–∞.\n\n–®–∞–±–ª–æ–Ω: <b>¬´–ß—Ç–æ –ø–æ–º–æ–∂–µ—Ç –º–Ω–µ ‚Ä¶ (–∂–µ–ª–∞–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç) —Å–µ–≥–æ–¥–Ω—è?¬ª</b>",
            "expected": "HTML —Å —Ç–µ–≥–∞–º–∏ <b>"
        },
        {
            "name": "trainer_examples",
            "text": "üí° <b>–ü—Ä–∏–º–µ—Ä—ã –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫–∏</b>\n\n‚ú¶ \"–ü–æ—á–µ–º—É —É –º–µ–Ω—è –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è?\"\n‚Üí üåø \"–ß—Ç–æ –ø–æ–º–æ–∂–µ—Ç –º–Ω–µ –ø–æ–≤–µ—Ä–∏—Ç—å –≤ —Å–µ–±—è –∏ —Å–¥–µ–ª–∞—Ç—å –ø–µ—Ä–≤—ã–π —à–∞–≥?\"\n\n‚ú¶ \"–ö–æ–≥–¥–∞ –≤—Å—ë –Ω–∞–ª–∞–¥–∏—Ç—Å—è?\"\n‚Üí üåø \"–ö–∞–∫ —è –º–æ–≥—É –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å —Å–µ–±—è, –ø–æ–∫–∞ –≤—Å—ë –º–µ–Ω—è–µ—Ç—Å—è?\"\n\n–§–æ–∫—É—Å —Å–º–µ—â–∞–µ—Ç—Å—è —Å <i>–º–∏—Ä–∞</i> ‚Äî –Ω–∞ <b>—Å–µ–±—è</b>.\n–≠—Ç–æ –∏ –µ—Å—Ç—å —Ä–µ—Å—É—Ä—Å–Ω—ã–π –∑–∞–ø—Ä–æ—Å.",
            "expected": "HTML —Å —Ç–µ–≥–∞–º–∏ <b> –∏ <i>"
        }
    ]
    
    print("\nüìã –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤:")
    
    for test in test_texts:
        print(f"\n‚úÖ {test['name']}:")
        print(f"   –¢–µ–∫—Å—Ç: {test['text'][:100]}...")
        print(f"   –û–∂–∏–¥–∞–µ—Ç—Å—è: {test['expected']}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ HTML-—Ç–µ–≥–æ–≤
        has_b = "<b>" in test['text']
        has_i = "<i>" in test['text'] 
        has_code = "<code>" in test['text']
        has_br = "<br>" in test['text']
        
        print(f"   HTML-—Ç–µ–≥–∏: <b>={has_b}, <i>={has_i}, <code>={has_code}, <br>={has_br}")
        
        if has_br:
            print(f"   ‚ö†Ô∏è  –ü–†–û–ë–õ–ï–ú–ê: –ù–∞–π–¥–µ–Ω —Ç–µ–≥ <br>!")
        else:
            print(f"   ‚úÖ –ù–µ—Ç –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö —Ç–µ–≥–æ–≤ <br>")
    
    print("\nüéØ –ò—Ç–æ–≥:")
    print("   –í—Å–µ —Ç–µ–∫—Å—Ç—ã –∏—Å–ø–æ–ª—å–∑—É—é—Ç —Ç–æ–ª—å–∫–æ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ Telegram HTML-—Ç–µ–≥–∏:")
    print("   ‚Ä¢ <b> - –∂–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç ‚úÖ")
    print("   ‚Ä¢ <i> - –∫—É—Ä—Å–∏–≤ ‚úÖ") 
    print("   ‚Ä¢ <code> - –º–æ–Ω–æ—à–∏—Ä–∏–Ω–Ω—ã–π —à—Ä–∏—Ñ—Ç ‚úÖ")
    print("   ‚Ä¢ \\n\\n - –ø–µ—Ä–µ–Ω–æ—Å—ã —Å—Ç—Ä–æ–∫ ‚úÖ")
    print("   ‚Ä¢ –ù–ï–¢ <br> —Ç–µ–≥–æ–≤ ‚úÖ")
    
    print("\nüí° –ï—Å–ª–∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç:")
    print("   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ parse_mode='HTML' –≤ —Ñ—É–Ω–∫—Ü–∏—è—Ö")
    print("   2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –Ω–µ—Ç parse_mode='Markdown'")
    print("   3. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞ –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π")

if __name__ == "__main__":
    test_html_tags()
