#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è MarketplaceManager
"""

import asyncio
import os
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞ –≤ PYTHONPATH
project_root = Path(__file__).parent
sys.path.insert(0, str(project_root))

from modules.marketplace_manager import MarketplaceManager

async def test_marketplace_manager():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ MarketplaceManager"""
    
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ MarketplaceManager...")
    print("=" * 50)
    
    # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –º–µ–Ω–µ–¥–∂–µ—Ä–∞
    manager = MarketplaceManager()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å API
    print("\nüìä –°—Ç–∞—Ç—É—Å API:")
    status = manager.get_status()
    for platform, config in status.items():
        print(f"  {platform}: {'‚úÖ' if config.get('configured', False) else '‚ùå'}")
        for key, value in config.items():
            if key != 'configured':
                print(f"    {key}: {'‚úÖ' if value else '‚ùå'}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    print("\nüîó –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π:")
    try:
        connections = await manager.test_connections()
        for platform, result in connections.items():
            if result is True:
                print(f"  {platform}: ‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ")
            elif isinstance(result, str) and result.startswith("API –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"):
                print(f"  {platform}: ‚ö†Ô∏è  {result}")
            else:
                print(f"  {platform}: ‚ùå {result}")
    except Exception as e:
        print(f"  –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π: {e}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é (–µ—Å–ª–∏ API –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã)
    print("\nüîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏:")
    
    if status['ozon']['configured']:
        print("  Ozon: –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é...")
        try:
            result = await manager.sync_ozon_data()
            if result['success']:
                print(f"    ‚úÖ {result['message']}")
            else:
                print(f"    ‚ùå {result['error']}")
        except Exception as e:
            print(f"    ‚ùå –û—à–∏–±–∫–∞: {e}")
    else:
        print("  Ozon: API –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º")
    
    if status['wildberries']['configured']:
        print("  Wildberries: –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é...")
        try:
            result = await manager.sync_wb_data()
            if result['success']:
                print(f"    ‚úÖ {result['message']}")
            else:
                print(f"    ‚ùå {result['error']}")
        except Exception as e:
            print(f"    ‚ùå –û—à–∏–±–∫–∞: {e}")
    else:
        print("  Wildberries: API –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º")
    
    print("\n" + "=" * 50)
    print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

def check_environment():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è:")
    
    required_vars = {
        "OZON_API_KEY": "API –∫–ª—é—á Ozon",
        "OZON_CLIENT_ID": "Client ID Ozon", 
        "WB_API_KEY": "API –∫–ª—é—á Wildberries"
    }
    
    missing_vars = []
    for var, description in required_vars.items():
        value = os.getenv(var)
        if value:
            print(f"  {var}: ‚úÖ {description} (–Ω–∞—Å—Ç—Ä–æ–µ–Ω)")
        else:
            print(f"  {var}: ‚ùå {description} (–Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω)")
            missing_vars.append(var)
    
    if missing_vars:
        print(f"\n‚ö†Ô∏è  –î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ: {', '.join(missing_vars)}")
        print("   –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env –∏–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è")
    
    return len(missing_vars) == 0

if __name__ == "__main__":
    print("üéØ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–¥—É–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞–º–∏")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    env_ok = check_environment()
    
    print()
    if env_ok:
        print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤...")
        asyncio.run(test_marketplace_manager())
    else:
        print("‚ö†Ô∏è  –¢–µ—Å—Ç—ã –±—É–¥—É—Ç –∑–∞–ø—É—â–µ–Ω—ã —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å—é")
        print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤...")
        asyncio.run(test_marketplace_manager())
