#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç –º–µ—Ç—Ä–∏–∫ –Ω–∞ –ª–æ–∫–∞–ª—å–Ω–æ–π –±–∞–∑–µ
"""

import sqlite3
import sys

db_path = "bot (7).db"

print(f"üìÅ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: {db_path}")
print()
print("=" * 60)
print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ú–ï–¢–†–ò–ö")
print("=" * 60)
print()

try:
    conn = sqlite3.connect(db_path)
    conn.row_factory = sqlite3.Row
    cursor = conn.cursor()
    
    # 1. –°–µ—Å—Å–∏–∏ –∑–∞ —Å–µ–≥–æ–¥–Ω—è (–∫–∞–∫ –≤ –≥–ª–∞–≤–Ω–æ–º –¥–∞—à–±–æ—Ä–¥–µ)
    print("1Ô∏è‚É£  –ì–õ–ê–í–ù–´–ô –î–ê–®–ë–û–†–î: –ó–∞–ø—É—â–µ–Ω–æ/–ó–∞–≤–µ—Ä—à–µ–Ω–æ")
    print("-" * 60)
    
    cursor.execute("""
        SELECT 
            COALESCE(SUM(started), 0) as total_starts,
            COALESCE(SUM(completed), 0) as total_completions
        FROM v_sessions_daily 
        WHERE scenario = 'card_of_day' AND d_local = date('now', '+3 hours')
    """)
    
    row = cursor.fetchone()
    print(f"‚úÖ –ó–∞–ø—É—â–µ–Ω–æ: {row['total_starts']}")
    print(f"‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–æ: {row['total_completions']}")
    
    if row['total_starts'] > 0:
        completion_rate = (row['total_completions'] / row['total_starts'] * 100)
        print(f"‚úÖ Completion Rate: {completion_rate:.1f}%")
    else:
        print("‚ö†Ô∏è  –ó–∞ —Å–µ–≥–æ–¥–Ω—è –Ω–µ—Ç –∑–∞–ø—É—Å–∫–æ–≤ (—ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ, –µ—Å–ª–∏ —Å–µ–≥–æ–¥–Ω—è –Ω–∏–∫—Ç–æ –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –±–æ—Ç–∞)")
    
    print()
    
    # 2. DAU
    print("2Ô∏è‚É£  DAU")
    print("-" * 60)
    
    cursor.execute("""
        SELECT COALESCE(dau, 0) as dau
        FROM v_dau_daily 
        WHERE d_local = date('now', '+3 hours')
    """)
    row = cursor.fetchone()
    print(f"‚úÖ DAU —Å–µ–≥–æ–¥–Ω—è: {row['dau']}")
    
    cursor.execute("""
        SELECT AVG(dau) as avg_dau
        FROM v_dau_daily 
        WHERE d_local >= date('now', '+3 hours', '-7 days')
    """)
    row = cursor.fetchone()
    print(f"‚úÖ –°—Ä–µ–¥–Ω–∏–π DAU (7 –¥–Ω–µ–π): {row['avg_dau']:.1f}")
    
    print()
    
    # 3. –í–æ—Ä–æ–Ω–∫–∞
    print("3Ô∏è‚É£  –í–û–†–û–ù–ö–ê '–ö–ê–†–¢–ê –î–ù–Ø' (–∑–∞ —Å–µ–≥–æ–¥–Ω—è)")
    print("-" * 60)
    
    cursor.execute("""
        SELECT 
            event,
            COUNT(DISTINCT session_id) as count
        FROM v_events
        WHERE scenario = 'card_of_day' AND d_local = date('now', '+3 hours')
        GROUP BY event
        ORDER BY 
            CASE event
                WHEN 'scenario_started' THEN 1
                WHEN 'initial_resource_selected' THEN 2
                WHEN 'card_drawn' THEN 3
                WHEN 'completed' THEN 4
                ELSE 5
            END
    """)
    
    steps = cursor.fetchall()
    
    if steps:
        step_counts = {row['event']: row['count'] for row in steps}
        base_count = step_counts.get('scenario_started', 0)
        if base_count == 0:
            base_count = step_counts.get('initial_resource_selected', 0)
        
        print(f"–ë–∞–∑–æ–≤—ã–π —à–∞–≥ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞: {base_count}")
        print()
        
        for row in steps:
            pct = (row['count'] / base_count * 100) if base_count > 0 else 0
            print(f"  ‚Ä¢ {row['event']}: {row['count']} ({pct:.1f}%)")
        
        completion_rate = (step_counts.get('completed', 0) / base_count * 100) if base_count > 0 else 0
        print()
        print(f"‚úÖ Completion Rate: {completion_rate:.1f}%")
    else:
        print("‚ö†Ô∏è  –ó–∞ —Å–µ–≥–æ–¥–Ω—è –Ω–µ—Ç —Å–æ–±—ã—Ç–∏–π")
    
    print()
    
    # 4. –ö–æ–ª–æ–¥—ã
    print("4Ô∏è‚É£  –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ö–û–õ–û–î (–∑–∞ —Å–µ–≥–æ–¥–Ω—è)")
    print("-" * 60)
    
    cursor.execute("""
        SELECT 
            deck,
            SUM(draws) as total_draws,
            SUM(uniq_users) as unique_users
        FROM v_decks_daily 
        WHERE d_local = date('now', '+3 hours') AND deck IS NOT NULL
        GROUP BY deck
    """)
    
    decks = cursor.fetchall()
    
    if decks:
        total_draws = sum(row['total_draws'] for row in decks)
        for deck in decks:
            pct = (deck['total_draws'] / total_draws * 100) if total_draws > 0 else 0
            print(f"  ‚Ä¢ {deck['deck']}: {deck['total_draws']} –≤—ã—Ç—è–≥–∏–≤–∞–Ω–∏–π ({pct:.1f}%)")
    else:
        print("‚ö†Ô∏è  –ó–∞ —Å–µ–≥–æ–¥–Ω—è –Ω–µ—Ç –≤—ã—Ç—è–≥–∏–≤–∞–Ω–∏–π –∫–∞—Ä—Ç")
    
    print()
    
    # 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö 7 –¥–Ω–µ–π
    print("5Ô∏è‚É£  –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ó–ê –ü–û–°–õ–ï–î–ù–ò–ï 7 –î–ù–ï–ô")
    print("-" * 60)
    
    cursor.execute("""
        SELECT 
            scenario,
            SUM(started) as total_starts,
            SUM(completed) as total_completions
        FROM v_sessions_daily 
        WHERE scenario = 'card_of_day' AND d_local >= date('now', '+3 hours', '-7 days')
        GROUP BY scenario
    """)
    
    row = cursor.fetchone()
    if row:
        print(f"‚úÖ –ó–∞–ø—É—â–µ–Ω–æ (7 –¥–Ω–µ–π): {row['total_starts']}")
        print(f"‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–æ (7 –¥–Ω–µ–π): {row['total_completions']}")
        if row['total_starts'] > 0:
            completion_rate = (row['total_completions'] / row['total_starts'] * 100)
            print(f"‚úÖ Completion Rate: {completion_rate:.1f}%")
    else:
        print("‚ö†Ô∏è  –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π")
    
    print()
    
    # 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–±—ã—Ç–∏–π scenario_started –∏ completed
    print("6Ô∏è‚É£  –ü–†–û–í–ï–†–ö–ê –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–• –°–û–ë–´–¢–ò–ô")
    print("-" * 60)
    
    cursor.execute("""
        SELECT 
            SUM(CASE WHEN event = 'scenario_started' THEN 1 ELSE 0 END) as started_count,
            SUM(CASE WHEN event = 'completed' THEN 1 ELSE 0 END) as completed_count,
            SUM(CASE WHEN event = 'initial_resource_selected' THEN 1 ELSE 0 END) as resource_count
        FROM v_events
        WHERE d_local >= date('now', '+3 hours', '-7 days')
    """)
    
    row = cursor.fetchone()
    print(f"üìä –°–æ–±—ã—Ç–∏—è –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π:")
    print(f"  ‚Ä¢ scenario_started: {row['started_count']}")
    print(f"  ‚Ä¢ completed: {row['completed_count']}")
    print(f"  ‚Ä¢ initial_resource_selected: {row['resource_count']}")
    
    if row['started_count'] == 0:
        print()
        print("‚ö†Ô∏è  –í–ê–ñ–ù–û: –Ω–µ—Ç —Å–æ–±—ã—Ç–∏–π 'scenario_started'!")
        print("   –≠—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –∫–æ–¥ —Å –Ω–æ–≤—ã–º–∏ —Å–æ–±—ã—Ç–∏—è–º–∏ –µ—â–µ –Ω–µ –∑–∞–ø—É—Å–∫–∞–ª—Å—è.")
        print("   –ü–æ—Å–ª–µ –¥–µ–ø–ª–æ—è —ç—Ç–∏ —Å–æ–±—ã—Ç–∏—è –ø–æ—è–≤—è—Ç—Å—è.")
    
    if row['completed_count'] == 0 and row['resource_count'] > 0:
        print()
        print("‚ö†Ô∏è  –í–ê–ñ–ù–û: –Ω–µ—Ç —Å–æ–±—ã—Ç–∏–π 'completed'!")
        print("   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–∞—á–∏–Ω–∞—é—Ç —Å—Ü–µ–Ω–∞—Ä–∏–π, –Ω–æ –Ω–∏–∫—Ç–æ –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª.")
        print("   –ò–ª–∏ –∫–æ–¥ —Å —Å–æ–±—ã—Ç–∏–µ–º 'completed' –µ—â–µ –Ω–µ –∑–∞–ø—É—Å–∫–∞–ª—Å—è.")
    
    conn.close()
    
    print()
    print("=" * 60)
    print("‚úÖ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û")
    print("=" * 60)
    print()
    print("üéØ –í–´–í–û–î:")
    print("  VIEW —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
    print("  –ú–µ—Ç—Ä–∏–∫–∏ —Å—á–∏—Ç–∞—é—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ!")
    print()
    print("üöÄ –°–õ–ï–î–£–Æ–©–ò–ô –®–ê–ì:")
    print("  –ó–∞–¥–µ–ø–ª–æ–π —Ñ–∏–∫—Å –Ω–∞ –ø—Ä–æ–¥: tools\\emergency_fix_and_deploy.bat")
    print("  –ò–ª–∏ –≤—Ä—É—á–Ω—É—é: git add . && git commit -m \"fix\" && git push")
    
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    import traceback
    traceback.print_exc()

