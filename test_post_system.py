# –∫–æ–¥/test_post_system.py

import asyncio
import sqlite3
from datetime import datetime
import json
import os

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—à–∏ –º–æ–¥—É–ª–∏
from database.db import Database
from modules.post_management import PostManager
from modules.scheduler import MailingScheduler

# –ú–æ–∫ –¥–ª—è –±–æ—Ç–∞ –∏ –ª–æ–≥–≥–µ—Ä–∞
class MockBot:
    async def send_message(self, chat_id, text, **kwargs):
        print(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {chat_id}: {text[:50]}...")
        return True
    
    async def send_photo(self, chat_id, photo, caption=None, **kwargs):
        print(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Ñ–æ—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {chat_id}: {caption[:50] if caption else '–ë–µ–∑ –ø–æ–¥–ø–∏—Å–∏'}...")
        return True

class MockLogger:
    async def log_action(self, user_id, action, details):
        print(f"–õ–æ–≥: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id}, –¥–µ–π—Å—Ç–≤–∏–µ {action}, –¥–µ—Ç–∞–ª–∏ {details}")

async def test_post_system():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–∏—Å—Ç–µ–º—É –ø–æ—Å—Ç–æ–≤."""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –ø–æ—Å—Ç–æ–≤...")
    
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –ë–î
    db_path = "test_posts.db"
    if os.path.exists(db_path):
        os.remove(db_path)
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ë–î
    db = Database(path=db_path)
    
    # –°–æ–∑–¥–∞–µ–º –º–æ–∫–∏
    bot = MockBot()
    logger = MockLogger()
    
    # –°–æ–∑–¥–∞–µ–º PostManager
    post_manager = PostManager(db, bot, logger)
    
    # –¢–µ—Å—Ç 1: –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ—Å—Ç–∞
    print("\nüìù –¢–µ—Å—Ç 1: –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ—Å—Ç–∞")
    post_id = post_manager.create_post(
        title="–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç",
        content="–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏—Å—Ç–µ–º—ã —Ä–∞—Å—Å—ã–ª–æ–∫!",
        created_by=123456
    )
    print(f"‚úÖ –ü–æ—Å—Ç —Å–æ–∑–¥–∞–Ω —Å ID: {post_id}")
    
    # –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ—Å—Ç–∞
    print("\nüìñ –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ—Å—Ç–∞")
    post = post_manager.get_post(post_id)
    print(f"‚úÖ –ü–æ—Å—Ç –ø–æ–ª—É—á–µ–Ω: {post['title']}")
    
    # –¢–µ—Å—Ç 3: –°–æ–∑–¥–∞–Ω–∏–µ —Ä–∞—Å—Å—ã–ª–∫–∏ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
    print("\nüì§ –¢–µ—Å—Ç 3: –°–æ–∑–¥–∞–Ω–∏–µ —Ä–∞—Å—Å—ã–ª–∫–∏ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º")
    mailing_id = post_manager.create_mailing(
        post_id=post_id,
        title="–¢–µ—Å—Ç–æ–≤–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞ –≤—Å–µ–º",
        send_to_all=True,
        created_by=123456
    )
    print(f"‚úÖ –†–∞—Å—Å—ã–ª–∫–∞ —Å–æ–∑–¥–∞–Ω–∞ —Å ID: {mailing_id}")
    
    # –¢–µ—Å—Ç 4: –°–æ–∑–¥–∞–Ω–∏–µ —Ä–∞—Å—Å—ã–ª–∫–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
    print("\nüì§ –¢–µ—Å—Ç 4: –°–æ–∑–¥–∞–Ω–∏–µ —Ä–∞—Å—Å—ã–ª–∫–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º")
    mailing_id2 = post_manager.create_mailing(
        post_id=post_id,
        title="–¢–µ—Å—Ç–æ–≤–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º",
        send_to_all=False,
        target_user_ids=[123456, 789012],
        created_by=123456
    )
    print(f"‚úÖ –†–∞—Å—Å—ã–ª–∫–∞ —Å–æ–∑–¥–∞–Ω–∞ —Å ID: {mailing_id2}")
    
    # –¢–µ—Å—Ç 5: –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏
    print("\nüìÖ –¢–µ—Å—Ç 5: –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏")
    scheduled_time = "2024-12-31 23:59"
    mailing_id3 = post_manager.create_mailing(
        post_id=post_id,
        title="–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞",
        send_to_all=True,
        scheduled_at=scheduled_time,
        created_by=123456
    )
    print(f"‚úÖ –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞ —Å–æ–∑–¥–∞–Ω–∞ —Å ID: {mailing_id3}")
    
    # –¢–µ—Å—Ç 6: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–æ—Å—Ç–æ–≤
    print("\nüìã –¢–µ—Å—Ç 6: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–æ—Å—Ç–æ–≤")
    posts = post_manager.get_all_posts()
    print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –ø–æ—Å—Ç–æ–≤: {len(posts)}")
    for post in posts:
        print(f"  - {post['title']} (ID: {post['id']})")
    
    # –¢–µ—Å—Ç 7: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ä–∞—Å—Å—ã–ª–æ–∫
    print("\nüì§ –¢–µ—Å—Ç 7: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ä–∞—Å—Å—ã–ª–æ–∫")
    mailings = post_manager.get_all_mailings()
    print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ —Ä–∞—Å—Å—ã–ª–æ–∫: {len(mailings)}")
    for mailing in mailings:
        print(f"  - {mailing['title']} (ID: {mailing['id']}, —Å—Ç–∞—Ç—É—Å: {mailing['status']})")
    
    # –¢–µ—Å—Ç 8: –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–∂–∏–¥–∞—é—â–∏—Ö —Ä–∞—Å—Å—ã–ª–æ–∫
    print("\n‚è≥ –¢–µ—Å—Ç 8: –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–∂–∏–¥–∞—é—â–∏—Ö —Ä–∞—Å—Å—ã–ª–æ–∫")
    pending = post_manager.db.get_pending_mailings()
    print(f"‚úÖ –û–∂–∏–¥–∞—é—â–∏—Ö —Ä–∞—Å—Å—ã–ª–æ–∫: {len(pending)}")
    
    # –¢–µ—Å—Ç 9: –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–µ–≤—å—é
    print("\nüìù –¢–µ—Å—Ç 9: –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–µ–≤—å—é")
    post_preview = post_manager.format_post_preview(post)
    print(f"‚úÖ –ü—Ä–µ–≤—å—é –ø–æ—Å—Ç–∞: {post_preview}")
    
    mailing_preview = post_manager.format_mailing_preview(mailings[0])
    print(f"‚úÖ –ü—Ä–µ–≤—å—é —Ä–∞—Å—Å—ã–ª–∫–∏: {mailing_preview}")
    
    # –¢–µ—Å—Ç 10: –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
    print("\n‚úÖ –¢–µ—Å—Ç 10: –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö")
    post_validation = post_manager.validate_post_data("", "")
    print(f"–í–∞–ª–∏–¥–∞—Ü–∏—è –ø—É—Å—Ç–æ–≥–æ –ø–æ—Å—Ç–∞: {post_validation}")
    
    mailing_validation = post_manager.validate_mailing_data(False, [])
    print(f"–í–∞–ª–∏–¥–∞—Ü–∏—è —Ä–∞—Å—Å—ã–ª–∫–∏ –±–µ–∑ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π: {mailing_validation}")
    
    # –¢–µ—Å—Ç 11: –°–æ–∑–¥–∞–Ω–∏–µ Scheduler
    print("\n‚è∞ –¢–µ—Å—Ç 11: –°–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞")
    scheduler = MailingScheduler(post_manager, check_interval=5)
    print(f"‚úÖ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ —Å–æ–∑–¥–∞–Ω, —Å—Ç–∞—Ç—É—Å: {scheduler.get_status()}")
    
    # –¢–µ—Å—Ç 12: –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–∞—Å—Å—ã–ª–æ–∫
    print("\nüîÑ –¢–µ—Å—Ç 12: –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–∞—Å—Å—ã–ª–æ–∫")
    result = await scheduler.process_mailings_now()
    print(f"‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏: {result}")
    
    # –û—á–∏—Å—Ç–∫–∞
    db.close()
    if os.path.exists(db_path):
        os.remove(db_path)
    
    print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")

if __name__ == "__main__":
    asyncio.run(test_post_system()) 