#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤
"""

import os
import sys
from datetime import datetime, timedelta

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

try:
    from config_local import TIMEZONE
except ImportError:
    from config import TIMEZONE

from database.db import Database

def test_scenario_logging():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–∏—Å—Ç–µ–º—É –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤...")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ë–î
    db_path = "database/test_scenario.db"
    db = Database(db_path)
    
    # –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    test_user_id = 123456789
    
    print(f"üìä –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å—Ü–µ–Ω–∞—Ä–∏–π '–ö–∞—Ä—Ç–∞ –¥–Ω—è' –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {test_user_id}")
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º —Å—Ü–µ–Ω–∞—Ä–∏–π "–ö–∞—Ä—Ç–∞ –¥–Ω—è"
    session_id = db.start_user_scenario(test_user_id, 'card_of_day')
    print(f"‚úÖ –°—Ü–µ–Ω–∞—Ä–∏–π –Ω–∞—á–∞—Ç —Å session_id: {session_id}")
    
    # –õ–æ–≥–∏—Ä—É–µ–º —à–∞–≥–∏
    db.log_scenario_step(test_user_id, 'card_of_day', 'started', {
        'session_id': session_id,
        'today': datetime.now(TIMEZONE).date().isoformat()
    })
    
    db.log_scenario_step(test_user_id, 'card_of_day', 'initial_resource_selected', {
        'resource': 'üòä –•–æ—Ä–æ—à–æ',
        'session_id': session_id
    })
    
    db.log_scenario_step(test_user_id, 'card_of_day', 'card_drawn', {
        'card_number': 15,
        'session_id': session_id,
        'user_request': '–ö–∞–∫ —É–ª—É—á—à–∏—Ç—å –æ—Ç–Ω–æ—à–µ–Ω–∏—è —Å –∫–æ–ª–ª–µ–≥–∞–º–∏?'
    })
    
    db.log_scenario_step(test_user_id, 'card_of_day', 'initial_response_provided', {
        'session_id': session_id,
        'response_length': 45
    })
    
    # –ó–∞–≤–µ—Ä—à–∞–µ–º —Å—Ü–µ–Ω–∞—Ä–∏–π
    db.complete_user_scenario(test_user_id, 'card_of_day', session_id)
    db.log_scenario_step(test_user_id, 'card_of_day', 'completed', {
        'card_number': 15,
        'session_id': session_id,
        'initial_resource': 'üòä –•–æ—Ä–æ—à–æ',
        'final_resource': 'üòä –•–æ—Ä–æ—à–æ'
    })
    
    print("‚úÖ –°—Ü–µ–Ω–∞—Ä–∏–π '–ö–∞—Ä—Ç–∞ –¥–Ω—è' –∑–∞–≤–µ—Ä—à–µ–Ω")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å—Ü–µ–Ω–∞—Ä–∏–π "–í–µ—á–µ—Ä–Ω—è—è —Ä–µ—Ñ–ª–µ–∫—Å–∏—è"
    print(f"üìä –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å—Ü–µ–Ω–∞—Ä–∏–π '–í–µ—á–µ—Ä–Ω—è—è —Ä–µ—Ñ–ª–µ–∫—Å–∏—è' –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {test_user_id}")
    
    session_id_2 = db.start_user_scenario(test_user_id, 'evening_reflection')
    print(f"‚úÖ –°—Ü–µ–Ω–∞—Ä–∏–π –Ω–∞—á–∞—Ç —Å session_id: {session_id_2}")
    
    # –õ–æ–≥–∏—Ä—É–µ–º —à–∞–≥–∏
    db.log_scenario_step(test_user_id, 'evening_reflection', 'started', {
        'session_id': session_id_2,
        'today': datetime.now(TIMEZONE).date().isoformat()
    })
    
    db.log_scenario_step(test_user_id, 'evening_reflection', 'good_moments_provided', {
        'session_id': session_id_2,
        'answer_length': 67
    })
    
    db.log_scenario_step(test_user_id, 'evening_reflection', 'gratitude_provided', {
        'session_id': session_id_2,
        'answer_length': 89
    })
    
    db.log_scenario_step(test_user_id, 'evening_reflection', 'hard_moments_provided', {
        'session_id': session_id_2,
        'answer_length': 123
    })
    
    # –ó–∞–≤–µ—Ä—à–∞–µ–º —Å—Ü–µ–Ω–∞—Ä–∏–π
    db.complete_user_scenario(test_user_id, 'evening_reflection', session_id_2)
    db.log_scenario_step(test_user_id, 'evening_reflection', 'completed', {
        'session_id': session_id_2,
        'ai_summary_generated': True,
        'good_moments_length': 67,
        'gratitude_length': 89,
        'hard_moments_length': 123
    })
    
    print("‚úÖ –°—Ü–µ–Ω–∞—Ä–∏–π '–í–µ—á–µ—Ä–Ω—è—è —Ä–µ—Ñ–ª–µ–∫—Å–∏—è' –∑–∞–≤–µ—Ä—à–µ–Ω")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –±—Ä–æ—à–µ–Ω–Ω—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π
    print(f"üìä –¢–µ—Å—Ç–∏—Ä—É–µ–º –±—Ä–æ—à–µ–Ω–Ω—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {test_user_id}")
    
    session_id_3 = db.start_user_scenario(test_user_id, 'card_of_day')
    db.log_scenario_step(test_user_id, 'card_of_day', 'started', {
        'session_id': session_id_3,
        'today': datetime.now(TIMEZONE).date().isoformat()
    })
    
    # –ë—Ä–æ—Å–∞–µ–º —Å—Ü–µ–Ω–∞—Ä–∏–π
    db.abandon_user_scenario(test_user_id, 'card_of_day', session_id_3)
    db.log_scenario_step(test_user_id, 'card_of_day', 'abandoned', {
        'session_id': session_id_3,
        'reason': 'user_left'
    })
    
    print("‚úÖ –ë—Ä–æ—à–µ–Ω–Ω—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π –æ–±—Ä–∞–±–æ—Ç–∞–Ω")
    
    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    print("\nüìà –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É...")
    
    card_stats = db.get_scenario_stats('card_of_day', 1)
    reflection_stats = db.get_scenario_stats('evening_reflection', 1)
    
    print(f"üé¥ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ '–ö–∞—Ä—Ç–∞ –¥–Ω—è' (–∑–∞ 1 –¥–µ–Ω—å):")
    if card_stats:
        print(f"  ‚Ä¢ –ó–∞–ø—É—Å–∫–æ–≤: {card_stats['total_starts']}")
        print(f"  ‚Ä¢ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–π: {card_stats['total_completions']}")
        print(f"  ‚Ä¢ –ë—Ä–æ—à–µ–Ω–æ: {card_stats['total_abandoned']}")
        print(f"  ‚Ä¢ –ü—Ä–æ—Ü–µ–Ω—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è: {card_stats['completion_rate']:.1f}%")
        print(f"  ‚Ä¢ –°—Ä–µ–¥–Ω–µ–µ —à–∞–≥–æ–≤: {card_stats['avg_steps']}")
    
    print(f"\nüåô –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ '–í–µ—á–µ—Ä–Ω—è—è —Ä–µ—Ñ–ª–µ–∫—Å–∏—è' (–∑–∞ 1 –¥–µ–Ω—å):")
    if reflection_stats:
        print(f"  ‚Ä¢ –ó–∞–ø—É—Å–∫–æ–≤: {reflection_stats['total_starts']}")
        print(f"  ‚Ä¢ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–π: {reflection_stats['total_completions']}")
        print(f"  ‚Ä¢ –ë—Ä–æ—à–µ–Ω–æ: {reflection_stats['total_abandoned']}")
        print(f"  ‚Ä¢ –ü—Ä–æ—Ü–µ–Ω—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è: {reflection_stats['completion_rate']:.1f}%")
        print(f"  ‚Ä¢ –°—Ä–µ–¥–Ω–µ–µ —à–∞–≥–æ–≤: {reflection_stats['avg_steps']}")
    
    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ —à–∞–≥–∞–º
    card_steps = db.get_scenario_step_stats('card_of_day', 1)
    reflection_steps = db.get_scenario_step_stats('evening_reflection', 1)
    
    print(f"\nüé¥ –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —à–∞–≥–∏ '–ö–∞—Ä—Ç–∞ –¥–Ω—è':")
    for step in card_steps:
        print(f"  ‚Ä¢ {step['step']}: {step['count']} —Ä–∞–∑")
    
    print(f"\nüåô –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —à–∞–≥–∏ '–í–µ—á–µ—Ä–Ω—è—è —Ä–µ—Ñ–ª–µ–∫—Å–∏—è':")
    for step in reflection_steps:
        print(f"  ‚Ä¢ {step['step']}: {step['count']} —Ä–∞–∑")
    
    # –ü–æ–ª—É—á–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    print(f"\nüë§ –ò—Å—Ç–æ—Ä–∏—è —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {test_user_id}:")
    user_history = db.get_user_scenario_history(test_user_id)
    for scenario in user_history:
        print(f"  ‚Ä¢ {scenario['scenario']}: {scenario['status']} (—à–∞–≥–æ–≤: {scenario['steps_count']})")
    
    # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
    db.close()
    
    print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
    print(f"üìÅ –¢–µ—Å—Ç–æ–≤–∞—è –ë–î —Å–æ–∑–¥–∞–Ω–∞: {db_path}")

if __name__ == "__main__":
    test_scenario_logging() 