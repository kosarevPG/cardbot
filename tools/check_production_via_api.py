#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–¥–∞–∫—à–Ω –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ API
"""

import requests
import json
from datetime import datetime

def check_production_via_web():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø—Ä–æ–¥–∞–∫—à–Ω –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å"""
    print("üîç –ü–†–û–í–ï–†–ö–ê PRODUCTION –î–ê–ù–ù–´–• –ß–ï–†–ï–ó WEB")
    print("=" * 50)
    
    # URL –ø—Ä–æ–¥–∞–∫—à–Ω –±–æ—Ç–∞
    base_url = "https://cardbot-kosarevpg.amvera.io"
    
    try:
        # –ü—Ä–æ–±—É–µ–º –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É SQLite
        response = requests.get(base_url, timeout=10)
        
        if response.status_code == 200:
            print("‚úÖ –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–æ—Å—Ç—É–ø–µ–Ω")
            print(f"üìä URL: {base_url}")
            print("üîç –û—Ç–∫—Ä–æ–π—Ç–µ —ç—Ç–æ—Ç URL –≤ –±—Ä–∞—É–∑–µ—Ä–µ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ë–î")
        else:
            print(f"‚ùå –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (–∫–æ–¥: {response.status_code})")
            
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        print("üí° –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
        print("   - –ë–æ—Ç –Ω–µ –∑–∞–ø—É—â–µ–Ω")
        print("   - –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π URL")
        print("   - –ü—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ç—å—é")

def check_bot_status():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞"""
    print("\nü§ñ –ü–†–û–í–ï–†–ö–ê –°–¢–ê–¢–£–°–ê –ë–û–¢–ê")
    print("=" * 30)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ—Ç–≤–µ—á–∞–µ—Ç –ª–∏ –±–æ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—ã
    # –≠—Ç–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —É –±–æ—Ç–∞ –µ—Å—Ç—å webhook –∏–ª–∏ web endpoint
    
    print("‚ÑπÔ∏è –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –±–æ—Ç–∞:")
    print("   1. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /start –±–æ—Ç—É")
    print("   2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –æ—Ç–≤–µ—á–∞–µ—Ç –ª–∏ –æ–Ω")
    print("   3. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /admin (–¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞ –¥–ª—è –Ω–µ-–∞–¥–º–∏–Ω–æ–≤)")

def generate_sql_queries():
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç SQL-–∑–∞–ø—Ä–æ—Å—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"""
    print("\nüìã SQL-–ó–ê–ü–†–û–°–´ –î–õ–Ø –ü–†–û–í–ï–†–ö–ò –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò")
    print("=" * 50)
    
    queries = [
        {
            "name": "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–¥–º–∏–Ω—Å–∫–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π",
            "sql": """
                SELECT 
                    user_id,
                    username,
                    name,
                    action,
                    timestamp,
                    CASE 
                        WHEN user_id IN (6682555021, 392141189, 239719200, 7494824111, 171507422, 138192985) 
                        THEN 'LEGITIMATE_ADMIN' 
                        ELSE 'UNAUTHORIZED_ACCESS' 
                    END as access_type
                FROM actions 
                WHERE action LIKE 'admin_%'
                ORDER BY timestamp DESC
                LIMIT 20
            """
        },
        {
            "name": "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 865377684",
            "sql": """
                SELECT 
                    user_id,
                    username,
                    name,
                    action,
                    timestamp
                FROM actions 
                WHERE user_id = 865377684
                ORDER BY timestamp DESC
            """
        },
        {
            "name": "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏",
            "sql": """
                SELECT 
                    COUNT(*) as total_admin_actions,
                    COUNT(CASE WHEN user_id IN (6682555021, 392141189, 239719200, 7494824111, 171507422, 138192985) THEN 1 END) as legitimate_actions,
                    COUNT(CASE WHEN user_id NOT IN (6682555021, 392141189, 239719200, 7494824111, 171507422, 138192985) THEN 1 END) as unauthorized_actions
                FROM actions 
                WHERE action LIKE 'admin_%'
            """
        }
    ]
    
    for i, query in enumerate(queries, 1):
        print(f"\n{i}. {query['name']}:")
        print("   SQL:")
        print(query['sql'])
        print()

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üîç –ü–†–û–í–ï–†–ö–ê PRODUCTION –î–ê–ù–ù–´–•")
    print("=" * 50)
    print(f"–í—Ä–µ–º—è –ø—Ä–æ–≤–µ—Ä–∫–∏: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ 1: –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    check_production_via_web()
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ 2: –°—Ç–∞—Ç—É—Å –±–æ—Ç–∞
    check_bot_status()
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ 3: SQL-–∑–∞–ø—Ä–æ—Å—ã
    generate_sql_queries()
    
    print("\nüìã –ò–ù–°–¢–†–£–ö–¶–ò–ò –î–õ–Ø –ü–†–û–í–ï–†–ö–ò:")
    print("1. –û—Ç–∫—Ä–æ–π—Ç–µ https://cardbot-kosarevpg.amvera.io –≤ –±—Ä–∞—É–∑–µ—Ä–µ")
    print("2. –ù–∞–π–¥–∏—Ç–µ —Ç–∞–±–ª–∏—Ü—É 'actions'")
    print("3. –í—ã–ø–æ–ª–Ω–∏—Ç–µ SQL-–∑–∞–ø—Ä–æ—Å—ã –≤—ã—à–µ")
    print("4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ –¥–µ–π—Å—Ç–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 865377684")
    print("5. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ –Ω–µ—Å–∞–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∞–¥–º–∏–Ω—Å–∫–∏–µ –¥–µ–π—Å—Ç–≤–∏—è")
    
    print("\nüö® –ï–°–õ–ò –û–ë–ù–ê–†–£–ñ–ï–ù–´ –ü–†–û–ë–õ–ï–ú–´:")
    print("- –ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–µ–ø–ª–æ–π –≤ Amvera")
    print("- –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞")
    print("- –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç –æ—à–∏–±–æ–∫")

if __name__ == "__main__":
    main() 