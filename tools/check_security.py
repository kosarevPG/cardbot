#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–ø—ã—Ç–∫–∏ –Ω–µ—Å–∞–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
"""

import sqlite3
import logging
from datetime import datetime, timedelta

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
ADMIN_IDS = ['6682555021', '392141189', '239719200', '7494824111', '171507422', '138192985']

def check_security():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏."""
    try:
        conn = sqlite3.connect('database/bot.db')
        cursor = conn.cursor()
        
        print("üîí –ü–†–û–í–ï–†–ö–ê –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò –ê–î–ú–ò–ù-–ü–ê–ù–ï–õ–ò")
        print("=" * 50)
        
        # 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ø—ã—Ç–æ–∫ –Ω–µ—Å–∞–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
        print("\n1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ø—ã—Ç–æ–∫ –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω-—Ñ—É–Ω–∫—Ü–∏—è–º:")
        cursor.execute("""
            SELECT 
                user_id,
                username,
                name,
                action,
                timestamp,
                CASE 
                    WHEN user_id IN (6682555021, 392141189, 239719200, 7494824111, 171507422, 138192985) 
                    THEN 'LEGITIMATE_ADMIN' 
                    ELSE 'UNAUTHORIZED_ACCESS' 
                END as access_type
            FROM actions 
            WHERE action LIKE 'admin_%'
                AND timestamp >= datetime('now', '-7 days')
            ORDER BY timestamp DESC
        """)
        
        admin_attempts = cursor.fetchall()
        unauthorized_count = 0
        
        for attempt in admin_attempts:
            user_id, username, name, action, timestamp, access_type = attempt
            if access_type == 'UNAUTHORIZED_ACCESS':
                unauthorized_count += 1
                print(f"   üö® –ù–ï–°–ê–ù–ö–¶–ò–û–ù–ò–†–û–í–ê–ù–ù–´–ô –î–û–°–¢–£–ü: User {user_id} ({username}) - {action} at {timestamp}")
            else:
                print(f"   ‚úÖ –õ–µ–≥–∏—Ç–∏–º–Ω—ã–π –¥–æ—Å—Ç—É–ø: User {user_id} ({username}) - {action}")
        
        if unauthorized_count == 0:
            print("   ‚úÖ –ù–µ—Ç –ø–æ–ø—ã—Ç–æ–∫ –Ω–µ—Å–∞–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞")
        else:
            print(f"   üö® –û–ë–ù–ê–†–£–ñ–ï–ù–û {unauthorized_count} –ø–æ–ø—ã—Ç–æ–∫ –Ω–µ—Å–∞–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞!")
        
        # 2. –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å—é
        print("\n2Ô∏è‚É£ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å—é:")
        cursor.execute("""
            SELECT 
                user_id,
                username,
                name,
                COUNT(*) as action_count,
                GROUP_CONCAT(DISTINCT action) as actions_performed,
                MIN(timestamp) as first_attempt,
                MAX(timestamp) as last_attempt
            FROM actions 
            WHERE action LIKE 'admin_%'
                AND user_id NOT IN (6682555021, 392141189, 239719200, 7494824111, 171507422, 138192985)
                AND timestamp >= datetime('now', '-7 days')
            GROUP BY user_id, username, name
            ORDER BY action_count DESC
        """)
        
        suspicious_users = cursor.fetchall()
        
        if suspicious_users:
            print("   üö® –û–ë–ù–ê–†–£–ñ–ï–ù–´ –ü–û–î–û–ó–†–ò–¢–ï–õ–¨–ù–´–ï –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ò:")
            for user in suspicious_users:
                user_id, username, name, action_count, actions, first_attempt, last_attempt = user
                print(f"      User {user_id} ({username}): {action_count} –∞–¥–º–∏–Ω—Å–∫–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π")
                print(f"         –î–µ–π—Å—Ç–≤–∏—è: {actions}")
                print(f"         –ü–µ—Ä–∏–æ–¥: {first_attempt} - {last_attempt}")
        else:
            print("   ‚úÖ –ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ")
        
        # 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–º –¥–∞–Ω–Ω—ã–º
        print("\n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–º –¥–∞–Ω–Ω—ã–º:")
        cursor.execute("""
            SELECT 
                COUNT(*) as total_requests,
                COUNT(DISTINCT user_id) as unique_users,
                MIN(timestamp) as earliest_access,
                MAX(timestamp) as latest_access
            FROM user_requests 
            WHERE timestamp >= datetime('now', '-7 days')
                AND user_id NOT IN (6682555021, 392141189, 239719200, 7494824111, 171507422, 138192985, 999999999)
        """)
        
        data_access = cursor.fetchone()
        if data_access:
            total_requests, unique_users, earliest, latest = data_access
            print(f"   üìä –í—Å–µ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤: {total_requests}")
            print(f"   üë• –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {unique_users}")
            print(f"   üìÖ –ü–µ—Ä–∏–æ–¥: {earliest} - {latest}")
        
        # 4. –û–±—â–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        print("\n4Ô∏è‚É£ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏:")
        
        if unauthorized_count > 0:
            print("   üö® –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –ú–ï–†–´:")
            print("      - –ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
            print("      - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ª–æ–≥–∏ –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç —É—Ç–µ—á–∫–∏ –¥–∞–Ω–Ω—ã—Ö")
            print("      - –£—Å–∏–ª–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞")
            print("      - –†–∞—Å—Å–º–æ—Ç—Ä–µ—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–º–µ–Ω—ã —Ç–æ–∫–µ–Ω–æ–≤")
        else:
            print("   ‚úÖ –°–∏—Å—Ç–µ–º–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
            print("   üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
            print("      - –†–µ–≥—É–ª—è—Ä–Ω–æ –ø—Ä–æ–≤–µ—Ä—è—Ç—å –ª–æ–≥–∏ –¥–æ—Å—Ç—É–ø–∞")
            print("      - –ú–æ–Ω–∏—Ç–æ—Ä–∏—Ç—å –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—É—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å")
            print("      - –û–±–Ω–æ–≤–ª—è—Ç—å —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤")
        
        # 5. –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
        print("\n5Ô∏è‚É£ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ (–∑–∞ 7 –¥–Ω–µ–π):")
        cursor.execute("""
            SELECT 
                COUNT(*) as total_admin_actions,
                COUNT(DISTINCT user_id) as unique_admin_users,
                COUNT(CASE WHEN user_id IN (6682555021, 392141189, 239719200, 7494824111, 171507422, 138192985) THEN 1 END) as legitimate_actions,
                COUNT(CASE WHEN user_id NOT IN (6682555021, 392141189, 239719200, 7494824111, 171507422, 138192985) THEN 1 END) as unauthorized_actions
            FROM actions 
            WHERE action LIKE 'admin_%'
                AND timestamp >= datetime('now', '-7 days')
        """)
        
        security_stats = cursor.fetchone()
        if security_stats:
            total_admin, unique_users, legitimate, unauthorized = security_stats
            print(f"   üìä –í—Å–µ–≥–æ –∞–¥–º–∏–Ω—Å–∫–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π: {total_admin}")
            print(f"   üë• –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {unique_users}")
            print(f"   ‚úÖ –õ–µ–≥–∏—Ç–∏–º–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π: {legitimate}")
            print(f"   üö® –ù–µ—Å–∞–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π: {unauthorized}")
        
        conn.close()
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏: {e}")
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏: {e}")

if __name__ == "__main__":
    check_security() 