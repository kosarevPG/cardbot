import asyncio
import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from modules.scheduler import MailingScheduler
from modules.post_management import PostManager
from database.db import Database
from datetime import datetime, timedelta
import pytz

async def debug_scheduler():
    print("=== –û–¢–õ–ê–î–ö–ê –ü–õ–ê–ù–ò–†–û–í–©–ò–ö–ê ===\n")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
    db = Database('database/dev.db')
    
    # –°–æ–∑–¥–∞–µ–º –∑–∞–≥–ª—É—à–∫—É –¥–ª—è –±–æ—Ç–∞ –∏ –ª–æ–≥–≥–µ—Ä–∞
    class MockBot:
        async def send_message(self, chat_id, text, **kwargs):
            print(f"üì§ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {chat_id}: {text[:50]}...")
            return True
    
    class MockLogger:
        def info(self, msg):
            print(f"‚ÑπÔ∏è {msg}")
        def error(self, msg):
            print(f"‚ùå {msg}")
        def warning(self, msg):
            print(f"‚ö†Ô∏è {msg}")
    
    # –°–æ–∑–¥–∞–µ–º PostManager
    post_manager = PostManager(db, MockBot(), MockLogger())
    
    # –°–æ–∑–¥–∞–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫
    scheduler = MailingScheduler(post_manager, check_interval=5)  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥
    
    print("–ó–∞–ø—É—Å–∫–∞–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫...")
    await scheduler.start()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–∂–∏–¥–∞—é—â–∏–µ —Ä–∞—Å—Å—ã–ª–∫–∏ –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥
    for i in range(12):  # 60 —Å–µ–∫—É–Ω–¥
        print(f"\n--- –ü—Ä–æ–≤–µ—Ä–∫–∞ {i+1} ---")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–∂–∏–¥–∞—é—â–∏–µ —Ä–∞—Å—Å—ã–ª–∫–∏
        pending = post_manager.db.get_pending_mailings()
        print(f"–û–∂–∏–¥–∞—é—â–∏—Ö —Ä–∞—Å—Å—ã–ª–æ–∫: {len(pending)}")
        for m in pending:
            print(f"ID: {m['id']}, –°—Ç–∞—Ç—É—Å: {m['status']}, –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ: {m['scheduled_at']}")
        
        # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–∞—Å—Å—ã–ª–∫–∏
        result = await scheduler.process_mailings_now()
        print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏: {result}")
        
        await asyncio.sleep(5)
    
    print("–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫...")
    await scheduler.stop()
    
    print("–ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")
    db.close()

if __name__ == "__main__":
    asyncio.run(debug_scheduler()) 