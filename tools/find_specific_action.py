#!/usr/bin/env python3
"""
–ü–æ–∏—Å–∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏ –≤ —Ç–∞–±–ª–∏—Ü–µ actions
"""
import sqlite3
import json

def find_specific_action():
    """–ò—â–µ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –∑–∞–ø–∏—Å—å –≤ actions"""
    try:
        db_path = "database/bot (20).db"
        conn = sqlite3.connect(db_path)
        conn.row_factory = sqlite3.Row
        
        print(f"üîç –ò—â–µ–º –∑–∞–ø–∏—Å—å —Å ID 8481")
        print(f"üìÅ –ë–î: {db_path}")
        
        # –ò—â–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –∑–∞–ø–∏—Å—å –ø–æ ID
        cursor = conn.execute("""
            SELECT * FROM actions 
            WHERE id = 8481
        """)
        
        action = cursor.fetchone()
        if action:
            print(f"\n‚úÖ –ù–∞–π–¥–µ–Ω–∞ –∑–∞–ø–∏—Å—å:")
            print(f"üìù ID: {action['id']}")
            print(f"üë§ User ID: {action['user_id']}")
            print(f"üë§ Username: {action['username']}")
            print(f"üë§ Name: {action['name']}")
            print(f"üè∑Ô∏è Action: {action['action']}")
            print(f"üìÖ Timestamp: {action['timestamp']}")
            
            if action['details']:
                try:
                    details = json.loads(action['details'])
                    print(f"üìÑ Details: {json.dumps(details, indent=2, ensure_ascii=False)}")
                except:
                    print(f"üìÑ Details (raw): {action['details']}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —ç—Ç–∞ –∑–∞–ø–∏—Å—å –≤ user_requests
            cursor2 = conn.execute("""
                SELECT * FROM user_requests 
                WHERE user_id = ?
            """, (action['user_id'],))
            
            user_requests = cursor2.fetchall()
            if user_requests:
                print(f"\n‚úÖ –ù–∞–π–¥–µ–Ω–æ –≤ user_requests: {len(user_requests)} –∑–∞–ø–∏—Å–µ–π")
                for ur in user_requests:
                    print(f"  ‚Ä¢ ID: {ur['id']} | Text: {ur['request_text'][:50]}... | Time: {ur['timestamp'][:16]}")
            else:
                print(f"\n‚ùå –ó–∞–ø–∏—Å–µ–π –≤ user_requests –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {action['user_id']} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
        else:
            print(f"\n‚ùå –ó–∞–ø–∏—Å—å —Å ID 8481 –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π ID –≤ —Ç–∞–±–ª–∏—Ü–µ
            cursor = conn.execute("SELECT MAX(id) FROM actions")
            max_id = cursor.fetchone()[0]
            print(f"üìä –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π ID –≤ actions: {max_id}")
            
            # –ò—â–µ–º –∑–∞–ø–∏—Å–∏ —Å user_id 1740579634
            cursor = conn.execute("""
                SELECT * FROM actions 
                WHERE user_id = 1740579634
                ORDER BY timestamp DESC
            """)
            
            user_actions = cursor.fetchall()
            if user_actions:
                print(f"\nüîç –ù–∞–π–¥–µ–Ω–æ {len(user_actions)} –∑–∞–ø–∏—Å–µ–π –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 1740579634:")
                for i, row in enumerate(user_actions[:5], 1):
                    print(f"\n  {i}. ID: {row['id']} | Action: {row['action']} | Time: {row['timestamp'][:16]}")
                    if row['details']:
                        try:
                            details = json.loads(row['details'])
                            if 'response' in details:
                                print(f"     üí¨ Response: {details['response'][:50]}...")
                        except:
                            print(f"     üìÑ Details: {row['details'][:50]}...")
            else:
                print(f"\n‚ùå –ó–∞–ø–∏—Å–µ–π –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 1740579634 –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ initial_response_provided
        print(f"\nüîç –í—Å–µ –∑–∞–ø–∏—Å–∏ initial_response_provided:")
        cursor = conn.execute("""
            SELECT id, user_id, action, details, timestamp
            FROM actions 
            WHERE action = 'initial_response_provided'
            ORDER BY timestamp DESC
            LIMIT 10
        """)
        
        initial_responses = cursor.fetchall()
        for row in initial_responses:
            print(f"\nüìù ID: {row['id']} | User: {row['user_id']} | Time: {row['timestamp'][:16]}")
            if row['details']:
                try:
                    details = json.loads(row['details'])
                    response = details.get('response', '–ù–µ—Ç response')
                    print(f"üí¨ Response: {response[:50]}...")
                except:
                    print(f"üí¨ Details: {row['details'][:50]}...")
        
        conn.close()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    find_specific_action() 