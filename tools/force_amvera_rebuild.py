#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∏ –Ω–∞ Amvera
–î–æ–±–∞–≤–ª—è–µ—Ç –≤—Ä–µ–º–µ–Ω–Ω—É—é –º–µ—Ç–∫—É –≤ main.py –∏ –ø—É—à–∏—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è
"""

import os
import subprocess
from datetime import datetime

def force_rebuild():
    """–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∏–Ω–∏—Ü–∏–∏—Ä—É–µ—Ç –ø–µ—Ä–µ—Å–±–æ—Ä–∫—É –Ω–∞ Amvera"""
    print("üöÄ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –Ω–∞ Amvera...")
    
    try:
        # –°–æ–∑–¥–∞–µ–º –Ω–µ–±–æ–ª—å—à–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∏
        timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
        
        with open("main.py", "r", encoding="utf-8") as f:
            content = f.read()
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Å –≤—Ä–µ–º–µ–Ω–Ω–æ–π –º–µ—Ç–∫–æ–π
        if "# Last Amvera rebuild:" not in content:
            content = f"# Last Amvera rebuild: {timestamp}\n{content}"
            
            with open("main.py", "w", encoding="utf-8") as f:
                f.write(content)
            
            print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ –≤—Ä–µ–º–µ–Ω–Ω–∞—è –º–µ—Ç–∫–∞ –¥–ª—è –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∏")
            
            # –ö–æ–º–º–∏—Ç–∏–º –∏ –ø—É—à–∏–º
            commands = [
                "git add main.py",
                f'git commit -m "force: –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –Ω–∞ Amvera - {timestamp}"',
                "git push origin master"
            ]
            
            for cmd in commands:
                print(f"üîÑ –í—ã–ø–æ–ª–Ω—è–µ–º: {cmd}")
                result = subprocess.run(cmd, shell=True, check=True, capture_output=True, text=True)
                print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ: {cmd}")
            
            print("üéâ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –∏–Ω–∏—Ü–∏–∏—Ä–æ–≤–∞–Ω–∞!")
            print("‚è≥ –ü–æ–¥–æ–∂–¥–∏—Ç–µ 5-10 –º–∏–Ω—É—Ç –∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É –Ω–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π")
            return True
        else:
            print("‚ÑπÔ∏è –í—Ä–µ–º–µ–Ω–Ω–∞—è –º–µ—Ç–∫–∞ —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω–∞")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∏: {e}")
        return False

if __name__ == "__main__":
    print("üîç –ê–ù–ê–õ–ò–ó –°–ò–¢–£–ê–¶–ò–ò:")
    print("=" * 40)
    print("‚úÖ –ù–æ–≤—ã–µ AI —Ñ—É–Ω–∫—Ü–∏–∏ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ –∫–æ–¥")
    print("‚úÖ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –¥–æ–±–∞–≤–ª–µ–Ω")
    print("‚úÖ Git push –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ")
    print("‚ùå –ù–æ –Ω–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç –≤ –ø—Ä–æ–¥–∞–∫—à–Ω–µ")
    print("\nüí° –í–û–ó–ú–û–ñ–ù–´–ï –ü–†–ò–ß–ò–ù–´:")
    print("1. Amvera –µ—â–µ –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª –ø–µ—Ä–µ—Å–±–æ—Ä–∫—É")
    print("2. –ï—Å—Ç—å –æ—à–∏–±–∫–∏ –≤ –ª–æ–≥–∞—Ö Amvera")
    print("3. –¢—Ä–µ–±—É–µ—Ç—Å—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∞")
    print("\nüöÄ –†–ï–®–ï–ù–ò–ï:")
    print("–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –Ω–∞ Amvera")
    
    response = input("\n‚ùì –í—ã–ø–æ–ª–Ω–∏—Ç—å –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—É—é –ø–µ—Ä–µ—Å–±–æ—Ä–∫—É? (y/n): ")
    if response.lower() in ['y', 'yes', '–¥–∞', '–¥']:
        force_rebuild()
    else:
        print("‚ÑπÔ∏è –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –ø—Ä–æ–ø—É—â–µ–Ω–∞")
        print("üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ Amvera –≤—Ä—É—á–Ω—É—é")
