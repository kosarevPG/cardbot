#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –¥–µ–ø–ª–æ—è –≤ –ø—Ä–æ–¥–∞–∫—à–Ω
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—ã
"""

import requests
import time
import logging
from datetime import datetime

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def check_bot_status():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞ –≤ –ø—Ä–æ–¥–∞–∫—à–Ω"""
    try:
        # URL –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å web endpoint)
        # response = requests.get('https://cardbot-kosarevpg.amvera.io/health', timeout=10)
        # return response.status_code == 200
        
        # –ü–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º True, —Ç–∞–∫ –∫–∞–∫ –Ω–µ—Ç web endpoint
        return True
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞—Ç—É—Å–∞ –±–æ—Ç–∞: {e}")
        return False

def check_security_features():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ —Ä–∞–±–æ—Ç–∞—é—Ç"""
    print("üîí –ü–†–û–í–ï–†–ö–ê –§–£–ù–ö–¶–ò–ô –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò –í –ü–†–û–î–ê–ö–®–ù")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é –ë–î –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç –ø–æ–ø—ã—Ç–æ–∫ –Ω–µ—Å–∞–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
    try:
        import sqlite3
        conn = sqlite3.connect('database/bot.db')
        cursor = conn.cursor()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∞–¥–º–∏–Ω—Å–∫–∏–µ –¥–µ–π—Å—Ç–≤–∏—è
        cursor.execute("""
            SELECT 
                user_id,
                username,
                name,
                action,
                timestamp,
                CASE 
                    WHEN user_id IN (6682555021, 392141189, 239719200, 7494824111, 171507422, 138192985) 
                    THEN 'LEGITIMATE_ADMIN' 
                    ELSE 'UNAUTHORIZED_ACCESS' 
                END as access_type
            FROM actions 
            WHERE action LIKE 'admin_%'
                AND timestamp >= datetime('now', '-1 hour')
            ORDER BY timestamp DESC
        """)
        
        recent_actions = cursor.fetchall()
        
        if recent_actions:
            print("üìä –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∞–¥–º–∏–Ω—Å–∫–∏–µ –¥–µ–π—Å—Ç–≤–∏—è:")
            for action in recent_actions:
                user_id, username, name, action_type, timestamp, access_type = action
                if access_type == 'UNAUTHORIZED_ACCESS':
                    print(f"   üö® –ù–ï–°–ê–ù–ö–¶–ò–û–ù–ò–†–û–í–ê–ù–ù–´–ô –î–û–°–¢–£–ü: User {user_id} ({username}) - {action_type}")
                else:
                    print(f"   ‚úÖ –õ–µ–≥–∏—Ç–∏–º–Ω—ã–π –¥–æ—Å—Ç—É–ø: User {user_id} ({username}) - {action_type}")
        else:
            print("   ‚ÑπÔ∏è –ù–µ—Ç –∞–¥–º–∏–Ω—Å–∫–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π —á–∞—Å")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
        cursor.execute("""
            SELECT 
                COUNT(*) as total_admin_actions,
                COUNT(CASE WHEN user_id IN (6682555021, 392141189, 239719200, 7494824111, 171507422, 138192985) THEN 1 END) as legitimate_actions,
                COUNT(CASE WHEN user_id NOT IN (6682555021, 392141189, 239719200, 7494824111, 171507422, 138192985) THEN 1 END) as unauthorized_actions
            FROM actions 
            WHERE action LIKE 'admin_%'
                AND timestamp >= datetime('now', '-24 hours')
        """)
        
        security_stats = cursor.fetchone()
        if security_stats:
            total, legitimate, unauthorized = security_stats
            print(f"\nüìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ (–∑–∞ 24 —á–∞—Å–∞):")
            print(f"   üìä –í—Å–µ–≥–æ –∞–¥–º–∏–Ω—Å–∫–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π: {total}")
            print(f"   ‚úÖ –õ–µ–≥–∏—Ç–∏–º–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π: {legitimate}")
            print(f"   üö® –ù–µ—Å–∞–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π: {unauthorized}")
            
            if unauthorized == 0:
                print("   üõ°Ô∏è –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–¨: –í—Å–µ –¥–µ–π—Å—Ç–≤–∏—è –ª–µ–≥–∏—Ç–∏–º–Ω—ã")
            else:
                print("   ‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –Ω–µ—Å–∞–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è!")
        
        conn.close()
        return unauthorized == 0
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏: {e}")
        return False

def check_deployment_status():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞—Ç—É—Å –¥–µ–ø–ª–æ—è"""
    print("üöÄ –ü–†–û–í–ï–†–ö–ê –°–¢–ê–¢–£–°–ê –î–ï–ü–õ–û–Ø")
    print("=" * 30)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
    try:
        import subprocess
        result = subprocess.run(['git', 'log', '--oneline', '-1'], 
                              capture_output=True, text=True)
        
        if result.returncode == 0:
            last_commit = result.stdout.strip()
            print(f"‚úÖ –ü–æ—Å–ª–µ–¥–Ω–∏–π –∫–æ–º–º–∏—Ç: {last_commit}")
            
            if "SECURITY" in last_commit.upper():
                print("‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—ã")
                return True
            else:
                print("‚ö†Ô∏è –ü–æ—Å–ª–µ–¥–Ω–∏–π –∫–æ–º–º–∏—Ç –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏")
                return False
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–æ–º–º–∏—Ç–µ")
            return False
            
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –¥–µ–ø–ª–æ—è: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"""
    print("üîç –ú–û–ù–ò–¢–û–†–ò–ù–ì –î–ï–ü–õ–û–Ø –í –ü–†–û–î–ê–ö–®–ù")
    print("=" * 50)
    print(f"–í—Ä–µ–º—è –ø—Ä–æ–≤–µ—Ä–∫–∏: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    print()
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ 1: –°—Ç–∞—Ç—É—Å –¥–µ–ø–ª–æ—è
    deployment_ok = check_deployment_status()
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ 2: –§—É–Ω–∫—Ü–∏–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    security_ok = check_security_features()
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ 3: –°—Ç–∞—Ç—É—Å –±–æ—Ç–∞
    bot_ok = check_bot_status()
    
    print("\nüìä –ò–¢–û–ì–û–í–´–ô –°–¢–ê–¢–£–°:")
    print(f"   üöÄ –î–µ–ø–ª–æ–π: {'‚úÖ –£—Å–ø–µ—à–µ–Ω' if deployment_ok else '‚ùå –ü—Ä–æ–±–ª–µ–º—ã'}")
    print(f"   üîí –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å: {'‚úÖ –ó–∞—â–∏—â–µ–Ω–∞' if security_ok else '‚ùå –£—è–∑–≤–∏–º–∞'}")
    print(f"   ü§ñ –ë–æ—Ç: {'‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç' if bot_ok else '‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω'}")
    
    if deployment_ok and security_ok and bot_ok:
        print("\nüéâ –í–°–ï –°–ò–°–¢–ï–ú–´ –†–ê–ë–û–¢–ê–Æ–¢ –ö–û–†–†–ï–ö–¢–ù–û!")
        print("‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—ã –≤ –ø—Ä–æ–¥–∞–∫—à–Ω")
        print("üõ°Ô∏è –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –∑–∞—â–∏—â–µ–Ω–∞ –æ—Ç –Ω–µ—Å–∞–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞")
    else:
        print("\n‚ö†Ô∏è –ï–°–¢–¨ –ü–†–û–ë–õ–ï–ú–´, –¢–†–ï–ë–£–ï–¢–°–Ø –í–ù–ò–ú–ê–ù–ò–ï!")
        if not deployment_ok:
            print("   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –∫–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π")
        if not security_ok:
            print("   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ—É–Ω–∫—Ü–∏–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏")
        if not bot_ok:
            print("   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞ –≤ Amvera")
    
    print(f"\n‚è∞ –°–ª–µ–¥—É—é—â–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç...")
    print("–î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")

if __name__ == "__main__":
    try:
        main()
        # –ó–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
        while True:
            time.sleep(300)  # 5 –º–∏–Ω—É—Ç
            print("\n" + "="*50)
            main()
    except KeyboardInterrupt:
        print("\nüõë –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–µ: {e}") 