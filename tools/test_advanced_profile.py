#!/usr/bin/env python3
from database.db import Database
from datetime import datetime, timedelta
import pytz

def test_advanced_profile():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø—Ä–æ—Ñ–∏–ª—è"""
    
    print("=== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –†–ê–°–®–ò–†–ï–ù–ù–û–ì–û –ü–†–û–§–ò–õ–Ø ===\n")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ë–î
    db = Database('database/dev.db')
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞ —Ä–µ–∞–ª—å–Ω–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ (–≤–∞—à ID)
    test_user_id = 6682555021
    
    print(f"–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ—Ñ–∏–ª—å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {test_user_id}...\n")
    
    # –ü–æ–ª—É—á–∞–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    advanced_stats = db.get_user_advanced_stats(test_user_id)
    
    print("üìä –†–ê–°–®–ò–†–ï–ù–ù–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
    print("-" * 50)
    
    for key, value in advanced_stats.items():
        if key == 'achievements':
            print(f"üèÜ {key}: {', '.join(value) if value else '–Ω–µ—Ç'}")
        else:
            print(f"‚Ä¢ {key}: {value}")
    
    print("\n" + "=" * 60)
    print("–ü–†–û–í–ï–†–ö–ê –û–¢–î–ï–õ–¨–ù–´–• –ú–ï–¢–†–ò–ö:")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Ä–∏–∏ –¥–Ω–µ–π
    print(f"\nüî• –°–µ—Ä–∏—è –¥–Ω–µ–π:")
    print(f"  ‚Ä¢ –¢–µ–∫—É—â–∞—è: {advanced_stats.get('current_streak', 0)}")
    print(f"  ‚Ä¢ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è: {advanced_stats.get('max_consecutive_days', 0)}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞—Ç—Ç–µ—Ä–Ω—ã
    print(f"\n‚è∞ –ü–∞—Ç—Ç–µ—Ä–Ω—ã:")
    print(f"  ‚Ä¢ –õ—é–±–∏–º–æ–µ –≤—Ä–µ–º—è: {advanced_stats.get('favorite_time', '–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö')}")
    print(f"  ‚Ä¢ –õ—é–±–∏–º—ã–π –¥–µ–Ω—å: {advanced_stats.get('favorite_day', '–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö')}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    print(f"\nüìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
    print(f"  ‚Ä¢ –ó–∞–≤–µ—Ä—à–µ–Ω–Ω–æ—Å—Ç—å: {advanced_stats.get('completion_rate', 0)}%")
    print(f"  ‚Ä¢ –ì–ª—É–±–∏–Ω–∞ —Å–µ—Å—Å–∏–π: {advanced_stats.get('avg_session_depth', 0)} —à–∞–≥–æ–≤")
    print(f"  ‚Ä¢ –°–µ—Å—Å–∏–π –≤ –¥–µ–Ω—å: {advanced_stats.get('avg_sessions_per_day', 0)}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
    achievements = advanced_stats.get('achievements', [])
    if achievements:
        print(f"\nüèÜ –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è:")
        for achievement in achievements:
            print(f"  ‚Ä¢ {achievement}")
    else:
        print(f"\nüèÜ –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è: –ø–æ–∫–∞ –Ω–µ—Ç")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å—Ç–æ—Ä–∏—é
    first_day = advanced_stats.get('first_day')
    last_day = advanced_stats.get('last_day')
    if first_day and last_day:
        print(f"\nüìÖ –ò—Å—Ç–æ—Ä–∏—è:")
        print(f"  ‚Ä¢ –ü–µ—Ä–≤—ã–π –¥–µ–Ω—å: {first_day}")
        print(f"  ‚Ä¢ –ü–æ—Å–ª–µ–¥–Ω–∏–π –¥–µ–Ω—å: {last_day}")
        print(f"  ‚Ä¢ –í—Å–µ–≥–æ –¥–Ω–µ–π: {advanced_stats.get('total_unique_days', 0)}")
    
    db.close()
    print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    test_advanced_profile() 