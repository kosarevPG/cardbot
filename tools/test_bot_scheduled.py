import asyncio
import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from modules.scheduler import MailingScheduler
from modules.post_management import PostManager
from database.db import Database
from datetime import datetime, timedelta
import pytz

async def test_bot_scheduled():
    print("=== –¢–ï–°–¢ –û–¢–õ–û–ñ–ï–ù–ù–´–• –ü–û–°–¢–û–í –ß–ï–†–ï–ó –ë–û–¢–ê ===\n")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
    db = Database('database/dev.db')
    
    # –°–æ–∑–¥–∞–µ–º –∑–∞–≥–ª—É—à–∫—É –¥–ª—è –±–æ—Ç–∞ –∏ –ª–æ–≥–≥–µ—Ä–∞
    class MockBot:
        async def send_message(self, chat_id, text, **kwargs):
            print(f"üì§ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {chat_id}: {text[:50]}...")
            return True
    
    class MockLogger:
        def info(self, msg):
            print(f"‚ÑπÔ∏è {msg}")
        def error(self, msg):
            print(f"‚ùå {msg}")
    
    # –°–æ–∑–¥–∞–µ–º PostManager
    post_manager = PostManager(db, MockBot(), MockLogger())
    
    # –°–æ–∑–¥–∞–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫
    scheduler = MailingScheduler(post_manager, check_interval=10)  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥
    
    print("–ó–∞–ø—É—Å–∫–∞–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫...")
    await scheduler.start()
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç
    post_id = post_manager.create_post(
        title="–¢–µ—Å—Ç–æ–≤—ã–π –æ—Ç–ª–æ–∂–µ–Ω–Ω—ã–π –ø–æ—Å—Ç —á–µ—Ä–µ–∑ –±–æ—Ç–∞",
        content="<b>–¢–µ—Å—Ç–æ–≤—ã–π –æ—Ç–ª–æ–∂–µ–Ω–Ω—ã–π –ø–æ—Å—Ç —á–µ—Ä–µ–∑ –±–æ—Ç–∞</b>\n\n–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ç–ª–æ–∂–µ–Ω–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ —á–µ—Ä–µ–∑ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫.",
        created_by=6682555021
    )
    
    print(f"–°–æ–∑–¥–∞–Ω –ø–æ—Å—Ç —Å ID: {post_id}")
    
    # –°–æ–∑–¥–∞–µ–º –æ—Ç–ª–æ–∂–µ–Ω–Ω—É—é —Ä–∞—Å—Å—ã–ª–∫—É –Ω–∞ 30 —Å–µ–∫—É–Ω–¥ –≤–ø–µ—Ä–µ–¥
    future_time = datetime.now() + timedelta(seconds=30)
    scheduled_at = future_time.strftime("%Y-%m-%d %H:%M")
    
    print(f"–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è (–ú–æ—Å–∫–≤–∞): {scheduled_at}")
    
    mailing_id = post_manager.create_mailing(
        post_id=post_id,
        title="–¢–µ—Å—Ç–æ–≤—ã–π –æ—Ç–ª–æ–∂–µ–Ω–Ω—ã–π –ø–æ—Å—Ç —á–µ—Ä–µ–∑ –±–æ—Ç–∞",
        send_to_all=True,
        created_by=6682555021,
        scheduled_at=scheduled_at
    )
    
    print(f"–°–æ–∑–¥–∞–Ω–∞ —Ä–∞—Å—Å—ã–ª–∫–∞ —Å ID: {mailing_id}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–∂–∏–¥–∞—é—â–∏–µ —Ä–∞—Å—Å—ã–ª–∫–∏
    pending = post_manager.db.get_pending_mailings()
    print(f"–û–∂–∏–¥–∞—é—â–∏—Ö —Ä–∞—Å—Å—ã–ª–æ–∫: {len(pending)}")
    for m in pending:
        print(f"ID: {m['id']}, –°—Ç–∞—Ç—É—Å: {m['status']}, –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ: {m['scheduled_at']}")
    
    print("\n–û–∂–∏–¥–∞–µ–º 40 —Å–µ–∫—É–Ω–¥ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏...")
    await asyncio.sleep(40)
    
    print("–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫...")
    await scheduler.stop()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    mailing = post_manager.get_mailing(mailing_id)
    if mailing:
        print(f"–§–∏–Ω–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å —Ä–∞—Å—Å—ã–ª–∫–∏: {mailing['status']}")
    
    print("–ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")
    db.close()

if __name__ == "__main__":
    asyncio.run(test_bot_scheduled()) 