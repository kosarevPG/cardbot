#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
"""
import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from database.db import Database
from datetime import datetime

def test_detailed_requests():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –¥–µ—Ç–∞–ª—å–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–æ–≤"""
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –î–ï–¢–ê–õ–¨–ù–û–ì–û –û–¢–û–ë–†–ê–ñ–ï–ù–ò–Ø –ó–ê–ü–†–û–°–û–í")
    print("=" * 60)
    
    try:
        db = Database('database/dev.db')
        
        # –ü–æ–ª—É—á–∞–µ–º –æ–±—Ä–∞–∑–µ—Ü –∑–∞–ø—Ä–æ—Å–æ–≤
        sample = db.get_user_requests_sample(10, 7)
        
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ –∑–∞–ø—Ä–æ—Å–æ–≤: {len(sample)}")
        print()
        
        if sample:
            for i, req in enumerate(sample, 1):
                user_id = req.get('user_id', 'N/A')
                user_name = req.get('user_name', '–ê–Ω–æ–Ω–∏–º')
                username = req.get('user_username', '')
                timestamp = req.get('timestamp', '')
                request_text = req['request_text']
                card_number = req.get('card_number', 'N/A')
                
                # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É
                try:
                    dt = datetime.fromisoformat(timestamp.replace('Z', '+00:00'))
                    formatted_date = dt.strftime('%d.%m.%Y %H:%M')
                except:
                    formatted_date = timestamp
                
                # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º username
                username_display = f"@{username}" if username else "–±–µ–∑ username"
                
                print(f"üî∏ –ó–ê–ü–†–û–° #{i}")
                print(f"   üìÖ –î–∞—Ç–∞: {formatted_date}")
                print(f"   üé¥ –ö–∞—Ä—Ç–∞: {card_number}")
                print(f"   üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:")
                print(f"      ‚Ä¢ ID: {user_id}")
                print(f"      ‚Ä¢ –ò–º—è: {user_name}")
                print(f"      ‚Ä¢ Username: {username_display}")
                print(f"   üí¨ –ó–∞–ø—Ä–æ—Å: ¬´{request_text}¬ª")
                print(f"   {'‚îÄ' * 50}")
        else:
            print("–ü–æ–∫–∞ –Ω–µ—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        print(f"\nüìà –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
        stats = db.get_user_requests_stats(7)
        print(f"   ‚Ä¢ –í—Å–µ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤: {stats.get('total_requests', 0)}")
        print(f"   ‚Ä¢ –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {stats.get('unique_users', 0)}")
        print(f"   ‚Ä¢ –°—Ä–µ–¥–Ω—è—è –¥–ª–∏–Ω–∞: {stats.get('avg_length', 0)} —Å–∏–º–≤–æ–ª–æ–≤")
        print(f"   ‚Ä¢ –ú–∏–Ω–∏–º—É–º: {stats.get('min_length', 0)} —Å–∏–º–≤–æ–ª–æ–≤")
        print(f"   ‚Ä¢ –ú–∞–∫—Å–∏–º—É–º: {stats.get('max_length', 0)} —Å–∏–º–≤–æ–ª–æ–≤")
        
        db.close()
        print(f"\nüéâ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù –£–°–ü–ï–®–ù–û!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    test_detailed_requests() 