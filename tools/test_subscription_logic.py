#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–æ–≥–∏–∫–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å—Ü–µ–Ω–∞—Ä–∏—è "–ö–∞—Ä—Ç–∞ –¥–Ω—è"
"""

import os
import sys
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

try:
    from config_local import TIMEZONE
except ImportError:
    from config import TIMEZONE

from database.db import Database

def test_subscription_logic():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ª–æ–≥–∏–∫—É –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å—Ü–µ–Ω–∞—Ä–∏—è"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–≥–∏–∫–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏...")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ë–î
    db_path = "database/test_subscription.db"
    db = Database(db_path)
    
    # –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    test_user_id = 123456789
    
    print(f"üìä –¢–µ—Å—Ç–∏—Ä—É–µ–º –ª–æ–≥–∏–∫—É –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {test_user_id}")
    
    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—â–µ –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª —Å—Ü–µ–Ω–∞—Ä–∏–π "–ö–∞—Ä—Ç–∞ –¥–Ω—è"
    has_completed = db.has_completed_scenario_first_time(test_user_id, 'card_of_day')
    print(f"‚úÖ –î–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å—Ü–µ–Ω–∞—Ä–∏—è: {has_completed} (–æ–∂–∏–¥–∞–µ—Ç—Å—è False)")
    
    if has_completed:
        print("‚ùå –û—à–∏–±–∫–∞: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –¥–æ–ª–∂–µ–Ω –±—ã–ª –∑–∞–≤–µ—Ä—à–∏—Ç—å —Å—Ü–µ–Ω–∞—Ä–∏–π")
        return False
    
    # 2. –°–∏–º—É–ª–∏—Ä—É–µ–º –ø–µ—Ä–≤–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Å—Ü–µ–Ω–∞—Ä–∏—è "–ö–∞—Ä—Ç–∞ –¥–Ω—è"
    print(f"\nüìä –°–∏–º—É–ª–∏—Ä—É–µ–º –ø–µ—Ä–≤–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Å—Ü–µ–Ω–∞—Ä–∏—è '–ö–∞—Ä—Ç–∞ –¥–Ω—è'")
    
    session_id = db.start_user_scenario(test_user_id, 'card_of_day')
    print(f"‚úÖ –°—Ü–µ–Ω–∞—Ä–∏–π –Ω–∞—á–∞—Ç —Å session_id: {session_id}")
    
    # –õ–æ–≥–∏—Ä—É–µ–º —à–∞–≥–∏
    db.log_scenario_step(test_user_id, 'card_of_day', 'started', {
        'session_id': session_id,
        'today': datetime.now(TIMEZONE).date().isoformat()
    })
    
    db.log_scenario_step(test_user_id, 'card_of_day', 'initial_resource_selected', {
        'resource': 'üòä –•–æ—Ä–æ—à–æ',
        'session_id': session_id
    })
    
    db.log_scenario_step(test_user_id, 'card_of_day', 'card_drawn', {
        'card_number': 15,
        'session_id': session_id
    })
    
    db.log_scenario_step(test_user_id, 'card_of_day', 'completed', {
        'card_number': 15,
        'session_id': session_id
    })
    
    # –ó–∞–≤–µ—Ä—à–∞–µ–º —Å—Ü–µ–Ω–∞—Ä–∏–π
    db.complete_user_scenario(test_user_id, 'card_of_day', session_id)
    print("‚úÖ –°—Ü–µ–Ω–∞—Ä–∏–π '–ö–∞—Ä—Ç–∞ –¥–Ω—è' –∑–∞–≤–µ—Ä—à–µ–Ω")
    
    # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ç–µ–ø–µ—Ä—å –∑–∞–≤–µ—Ä—à–∏–ª —Å—Ü–µ–Ω–∞—Ä–∏–π –≤–ø–µ—Ä–≤—ã–µ
    has_completed = db.has_completed_scenario_first_time(test_user_id, 'card_of_day')
    print(f"‚úÖ –ü–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è: {has_completed} (–æ–∂–∏–¥–∞–µ—Ç—Å—è True)")
    
    if not has_completed:
        print("‚ùå –û—à–∏–±–∫–∞: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω –±—ã–ª –∑–∞–≤–µ—Ä—à–∏—Ç—å —Å—Ü–µ–Ω–∞—Ä–∏–π –≤–ø–µ—Ä–≤—ã–µ")
        return False
    
    # 4. –°–∏–º—É–ª–∏—Ä—É–µ–º –≤—Ç–æ—Ä–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Å—Ü–µ–Ω–∞—Ä–∏—è
    print(f"\nüìä –°–∏–º—É–ª–∏—Ä—É–µ–º –≤—Ç–æ—Ä–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Å—Ü–µ–Ω–∞—Ä–∏—è '–ö–∞—Ä—Ç–∞ –¥–Ω—è'")
    
    session_id_2 = db.start_user_scenario(test_user_id, 'card_of_day')
    db.log_scenario_step(test_user_id, 'card_of_day', 'started', {
        'session_id': session_id_2,
        'today': datetime.now(TIMEZONE).date().isoformat()
    })
    
    db.log_scenario_step(test_user_id, 'card_of_day', 'completed', {
        'card_number': 20,
        'session_id': session_id_2
    })
    
    db.complete_user_scenario(test_user_id, 'card_of_day', session_id_2)
    print("‚úÖ –í—Ç–æ—Ä–æ–π —Å—Ü–µ–Ω–∞—Ä–∏–π '–ö–∞—Ä—Ç–∞ –¥–Ω—è' –∑–∞–≤–µ—Ä—à–µ–Ω")
    
    # 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è –≤—Å–µ –µ—â–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç True (–ø–æ—Å–ª–µ –ª—é–±–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è)
    has_completed = db.has_completed_scenario_first_time(test_user_id, 'card_of_day')
    print(f"‚úÖ –ü–æ—Å–ª–µ –≤—Ç–æ—Ä–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è: {has_completed} (–æ–∂–∏–¥–∞–µ—Ç—Å—è True - —Å—Ü–µ–Ω–∞—Ä–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω —Ö–æ—Ç—è –±—ã —Ä–∞–∑)")
    
    if not has_completed:
        print("‚ùå –û—à–∏–±–∫–∞: —Ñ—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å True –ø–æ—Å–ª–µ –ª—é–±–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å—Ü–µ–Ω–∞—Ä–∏—è")
        return False
    
    # 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å—Ç–æ—Ä–∏—é —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤
    print(f"\nüìä –ò—Å—Ç–æ—Ä–∏—è —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:")
    history = db.get_user_scenario_history(test_user_id, 'card_of_day')
    for scenario in history:
        print(f"  ‚Ä¢ –°—Ç–∞—Ç—É—Å: {scenario['status']}, Session ID: {scenario['session_id'][:20]}...")
    
    print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
    print(f"üìÅ –¢–µ—Å—Ç–æ–≤–∞—è –ë–î —Å–æ–∑–¥–∞–Ω–∞: {db_path}")
    
    return True

if __name__ == "__main__":
    test_subscription_logic()
