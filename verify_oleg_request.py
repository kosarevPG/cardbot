#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø–∏—Å–µ–π –û–ª–µ–≥–∞ –≤ user_requests
"""
import sqlite3
from datetime import datetime

def verify_oleg_request():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∑–∞–ø–∏—Å–∏ –û–ª–µ–≥–∞ –≤ user_requests"""
    try:
        db_path = "database/bot (20).db"
        conn = sqlite3.connect(db_path)
        conn.row_factory = sqlite3.Row
        
        print(f"üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø–∏—Å–∏ –û–ª–µ–≥–∞ (1740579634)")
        print(f"üìÅ –ë–î: {db_path}")
        
        # –ò—â–µ–º –∑–∞–ø–∏—Å–∏ –û–ª–µ–≥–∞
        cursor = conn.execute("""
            SELECT ur.*, u.name, u.username
            FROM user_requests ur 
            LEFT JOIN users u ON ur.user_id = u.user_id 
            WHERE ur.user_id = 1740579634
            ORDER BY ur.timestamp DESC
        """)
        
        oleg_requests = cursor.fetchall()
        
        if oleg_requests:
            print(f"\n‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(oleg_requests)} –∑–∞–ø–∏—Å–µ–π –û–ª–µ–≥–∞:")
            for i, row in enumerate(oleg_requests, 1):
                name = row['name'] or "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π"
                username = f"@{row['username']}" if row['username'] else ""
                
                # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É
                try:
                    dt = datetime.fromisoformat(row['timestamp'].replace('Z', '+00:00'))
                    formatted_date = dt.strftime("%d.%m.%Y %H:%M:%S")
                except:
                    formatted_date = row['timestamp']
                
                print(f"\n  {i}. ID: {row['id']}")
                print(f"     üë§ {name} {username} (ID: {row['user_id']})")
                print(f"     üìÖ {formatted_date}")
                print(f"     üí¨ {row['request_text']}")
                print(f"     üÜî Session: {row['session_id']}")
                print(f"     üÉè Card: {row['card_number']}")
        else:
            print(f"\n‚ùå –ó–∞–ø–∏—Å–µ–π –û–ª–µ–≥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        cursor = conn.execute("SELECT COUNT(*) FROM user_requests")
        total_requests = cursor.fetchone()[0]
        
        cursor = conn.execute("SELECT COUNT(DISTINCT user_id) FROM user_requests")
        unique_users = cursor.fetchone()[0]
        
        print(f"\nüìä –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        print(f"  ‚Ä¢ –í—Å–µ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤: {total_requests}")
        print(f"  ‚Ä¢ –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {unique_users}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ø-5 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –∑–∞–ø—Ä–æ—Å–æ–≤
        cursor = conn.execute("""
            SELECT ur.user_id, u.name, u.username, COUNT(*) as request_count
            FROM user_requests ur 
            LEFT JOIN users u ON ur.user_id = u.user_id 
            GROUP BY ur.user_id 
            ORDER BY request_count DESC 
            LIMIT 5
        """)
        
        top_users = cursor.fetchall()
        print(f"\nüèÜ –¢–æ–ø-5 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –∑–∞–ø—Ä–æ—Å–æ–≤:")
        for i, row in enumerate(top_users, 1):
            name = row['name'] or "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π"
            username = f"@{row['username']}" if row['username'] else ""
            print(f"  {i}. {name} {username} (ID: {row['user_id']}) - {row['request_count']} –∑–∞–ø—Ä–æ—Å–æ–≤")
        
        conn.close()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    verify_oleg_request() 